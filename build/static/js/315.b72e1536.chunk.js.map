{"version":3,"file":"static/js/315.b72e1536.chunk.js","mappings":"mOAGMA,EAAWC,IAAAA,OAAa,CAC5BC,QAASC,SAOJ,SAASC,EAAiBC,GAC/B,OAAOL,EAASM,IAAI,iBAADC,OAAkBF,EAAc,oBAAsB,IAC3E,CAEO,SAASG,EAAaC,GAM3B,OAAOT,EAASM,IAAI,eAADC,OAAgBG,EAAAA,UAAsBD,EAAOE,SAAS,KAC3E,CAEO,SAASC,EAAYC,GAC1B,OAAOb,EAASM,IAAI,eAADC,OAAgBM,GACrC,C,yMCzBA,GAAgB,OAAS,8BAA8B,iBAAiB,sCAAsC,mBAAmB,wCAAwC,oBAAoB,yCAAyC,KAAO,4BAA4B,QAAU,+BAA+B,QAAU,gC,SC+E5T,MA1DA,WACE,IAAMC,GAAWC,EAAAA,EAAAA,MACjBC,EAA0CC,EAAAA,SAAe,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAArDI,EAAaF,EAAA,GAAEG,EAAgBH,EAAA,GAC9BI,GAAcC,EAAAA,EAAAA,UAAS,oBAAoB,kBAAMnB,EAAAA,EAAAA,KAAkB,GAAE,CAC3EoB,UAAW,SAACC,GAAC,OAAKJ,EAAiBI,EAAEC,KAAKN,cAAc,EACxDO,QAAS,SAACC,GAAG,IAAAC,EAAAC,EAAA,OAAKhB,GAChBiB,EAAAA,EAAAA,IAAc,CAAEC,SAAqB,QAAZH,EAAAD,EAAIK,gBAAQ,IAAAJ,GAAM,QAANC,EAAZD,EAAcH,YAAI,IAAAI,OAAN,EAAZA,EAAoBI,QAASN,EAAII,UAC3D,IAJKV,UAMR,OACEa,EAAAA,EAAAA,MAAA,OAAKC,UAAU,eAAcC,SAAA,EAC3BC,EAAAA,EAAAA,KAACC,EAAAA,EAAS,CAACC,SAAS,KAAKJ,UAAWK,EAAAA,OAAcJ,UAChDC,EAAAA,EAAAA,KAACI,EAAAA,EAAU,CACTC,QAAQ,KACRC,MAAM,UACNR,UAAWK,EAAAA,kBAAyBJ,SACrC,qBAIHF,EAAAA,EAAAA,MAACI,EAAAA,EAAS,CAACC,SAAS,KAAKJ,UAAU,QAAOC,SAAA,CAEtCf,IACEgB,EAAAA,EAAAA,KAAA,OAAKF,UAAU,cAAaC,UAC1BC,EAAAA,EAAAA,KAACO,EAAAA,EAAgB,CAACT,UAAU,cAK/Bd,GAAsC,IAAzBF,EAAc0B,SAC1BR,EAAAA,EAAAA,KAACI,EAAAA,EAAU,CAACK,MAAM,SAAQV,SAAC,0BAI5Bf,GAAaF,EAAc4B,KAAI,SAACC,GAAG,OAClCd,EAAAA,EAAAA,MAACe,EAAAA,EAAS,CAAAb,SAAA,EACRF,EAAAA,EAAAA,MAACgB,EAAAA,EAAgB,CAACC,YAAYd,EAAAA,EAAAA,KAACe,EAAAA,EAAU,IAAIhB,SAAA,CAC1CY,EAAI5C,cAAeiC,EAAAA,EAAAA,KAAA,KAAAD,SAAG,mBACtBY,EAAIK,UAEPnB,EAAAA,EAAAA,MAACoB,EAAAA,EAAgB,CAACnB,UAAU,oBAAmBC,SAAA,CAC5CY,EAAIO,QAEHP,EAAIQ,OACFnB,EAAAA,EAAAA,KAAA,KAAGoB,KAAMT,EAAIQ,KAAKpB,UAChBC,EAAAA,EAAAA,KAACI,EAAAA,EAAU,CAACE,MAAM,UAAUR,UAAU,OAAMC,SAAC,qBAVvCY,EAAIpC,IAeR,SAMxB,C","sources":["api/others.js","webpack://hts-frontend/./src/components/announcements/Announcements.module.css?13dc","components/announcements/index.jsx"],"sourcesContent":["import axios from 'axios';\nimport queryString from 'query-string';\n\nconst instance = axios.create({\n  baseURL: process.env.REACT_APP_BACKEND_URL,\n});\n\n/**\n * \n * @param {Boolean} isImportant Fetch only important announcements if true\n */\nexport function getAnnouncements(isImportant) {\n  return instance.get(`/announcements${isImportant ? '?isImportant=true' : ''}`);\n}\n\nexport function getDemoTests(values) {\n  /* Due to refetch of react query we get\n    values = {\n      queryKey: ['demo-tests', { subject: <value> }]\n    }\n  */\n  return instance.get(`/demo-tests?${queryString.stringify(values.queryKey[1])}`);\n}\n\nexport function getDemoTest(_id) {\n  return instance.get(`/demo-tests/${_id}`);\n}\n\nexport default instance;\n","// extracted by mini-css-extract-plugin\nexport default {\"header\":\"Announcements_header__rIPL3\",\"header-heading\":\"Announcements_header-heading__3q5oj\",\"header-paragraph\":\"Announcements_header-paragraph__zHGPd\",\"content-container\":\"Announcements_content-container__UnNY4\",\"card\":\"Announcements_card__3764a\",\"heading\":\"Announcements_heading__LNghF\",\"content\":\"Announcements_content__BV-7d\"};","import React from 'react';\n\nimport {\n  Typography,\n  Container,\n  Accordion,\n  AccordionSummary,\n  AccordionDetails,\n  CircularProgress,\n} from '@mui/material';\n\nimport { ExpandMore } from '@mui/icons-material';\n\nimport { useDispatch } from 'react-redux';\n\nimport { useQuery } from 'react-query';\nimport { getAnnouncements } from '../../api/others';\n\nimport { addErrorToast } from '../../redux/actions/toasts';\n\nimport styles from './Announcements.module.css';\n\nfunction Announcemnts() {\n  const dispatch = useDispatch();\n  const [announcements, setAnnouncements] = React.useState([]);\n  const { isLoading } = useQuery('allAnnouncements', () => getAnnouncements(), {\n    onSuccess: (r) => setAnnouncements(r.data.announcements),\n    onError: (err) => dispatch(\n      addErrorToast({ message: err.response?.data?.error || err.message }),\n    ),\n  })\n  return (\n    <div className=\"landing-page\">\n      <Container maxWidth=\"lg\" className={styles.header}>\n        <Typography\n          variant=\"h4\"\n          color=\"primary\"\n          className={styles['header-heading']}\n        >\n          Announcements\n        </Typography>\n      </Container>\n      <Container maxWidth=\"lg\" className=\"stack\">\n        {\n          isLoading && (\n            <div className=\"flex w-full\">\n              <CircularProgress className=\"m-auto\" />\n            </div>\n          )\n        }\n        {\n          !isLoading && announcements.length === 0 && (\n            <Typography align=\"center\">No announcements yet</Typography>\n          )\n        }\n        {\n          !isLoading && announcements.map((ann) => (\n            <Accordion key={ann._id}>\n              <AccordionSummary expandIcon={<ExpandMore />}>\n                {ann.isImportant && <b>Important:&nbsp;</b>}\n                {ann.title}\n              </AccordionSummary>\n              <AccordionDetails className=\"bg-gray-100 stack\">\n                {ann.details}\n                {\n                  ann.link && (\n                    <a href={ann.link}>\n                      <Typography color=\"primary\" className=\"mt-3\">View More</Typography>\n                    </a>\n                  )\n                }\n              </AccordionDetails>\n            </Accordion>\n          ))\n        }\n      </Container>\n    </div>\n  );\n}\n\nexport default Announcemnts;\n"],"names":["instance","axios","baseURL","process","getAnnouncements","isImportant","get","concat","getDemoTests","values","queryString","queryKey","getDemoTest","_id","dispatch","useDispatch","_React$useState","React","_React$useState2","_slicedToArray","announcements","setAnnouncements","isLoading","useQuery","onSuccess","r","data","onError","err","_err$response","_err$response$data","addErrorToast","message","response","error","_jsxs","className","children","_jsx","Container","maxWidth","styles","Typography","variant","color","CircularProgress","length","align","map","ann","Accordion","AccordionSummary","expandIcon","ExpandMore","title","AccordionDetails","details","link","href"],"sourceRoot":""}