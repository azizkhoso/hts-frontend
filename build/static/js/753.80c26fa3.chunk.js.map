{"version":3,"file":"static/js/753.80c26fa3.chunk.js","mappings":"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","sources":["api/login.js","components/login/StudentLogin.jsx","components/login/AdminLogin.jsx","components/login/index.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst login = axios.create({\n  baseURL: `${process.env.REACT_APP_BACKEND_URL}/login`,\n  headers: {\n    'Content-Type': 'application/json',\n  },\n});\n\n/**\n * Verify login function takes token and returns user object\n * @param {String} token \n * @returns {Promise}\n */\n\nexport function verifyLogin(token) {\n  return login.get('/verify', {\n    headers: {\n      authorization: `Bearer ${token}`,\n    }\n  });\n}\n\nexport function loginAdmin(data) {\n  return login.post('/admin', data);\n}\n\nexport function loginStudent(data) {\n  return login.post('/student', data);\n}\n\nexport function loginTeacher(data) {\n  return login.post('/teacher', data);\n}\n","import React from 'react';\n\nimport {\n  Stack,\n  Card,\n  Button,\n  Typography,\n  TextField,\n  CircularProgress,\n} from '@mui/material';\n\nimport {\n  useMutation,\n} from 'react-query';\n\nimport { useFormik } from 'formik';\nimport * as yup from 'yup';\n\nimport { Link, Navigate } from 'react-router-dom';\n\nimport { useSelector, useDispatch } from 'react-redux';\nimport { login } from '../../redux/actions/account';\n\nimport { loginStudent } from '../../api/login';\n\nimport logo from '../../assets/logo.png';\nimport { addErrorToast } from '../../redux/actions/toasts';\n\nexport default function StudentLogin() {\n  const dispatch = useDispatch();\n  // const navigate = useNavigate();\n  const student = useSelector((state) => state.account.student);\n  const { isLoading, mutate } = useMutation(\n    (values) => loginStudent(values),\n    {\n      onSuccess: ({ data }) => {\n        dispatch(login(data));\n        localStorage.setItem('hts-token', data.token);\n      },\n      onError: (err) => dispatch(\n        addErrorToast({ message: err.response?.data?.error || err.message }),\n      ),\n    },\n  );\n  // Form requirements\n  const schema = yup.object({\n    email: yup.string().required('Email is required').email('Enter a valid email'),\n    password: yup.string().required('Password is required').min(8, 'Password should be at least 8 characters long'),\n  });\n  const formik = useFormik({\n    initialValues: {\n      email: '',\n      password: '',\n    },\n    validationSchema: schema,\n    onSubmit: (values) => mutate(values),\n  });\n  // -----------------\n  if (student) return <Navigate replace to=\"/student\" />;\n  return (\n    <Card elevation={3} className=\"w-full pb-6 my-6\">\n      <Stack spacing={2}>\n        {/* <div className=\"flex\">\n          <Button variant=\"contained\" className=\"flex-grow\"\n          onClick={() => navigate('/login/teacher')}>Teacher</Button>\n          <Button variant=\"outlined\" className=\"flex-grow\"\n          onClick={() => navigate('/login/student')}>Student</Button>\n        </div> */}\n        <Typography variant=\"h5\" align=\"center\">Welcome Back</Typography>\n        <img className=\"self-center w-32\" alt=\"hts logo\" src={logo} />\n        <Typography variant=\"h5\" align=\"center\">Login as a Student</Typography>\n        <Stack spacing={2} className=\"px-6\" component=\"form\" onSubmit={formik.handleSubmit}>\n          <TextField\n            variant=\"outlined\"\n            fullWidth\n            label=\"Email\"\n            name=\"email\"\n            value={formik.values.email}\n            onChange={formik.handleChange}\n            error={Boolean(formik.touched.email) && formik.errors.email}\n            helperText={formik.touched.email && formik.errors.email}\n          />\n          <TextField\n            variant=\"outlined\"\n            fullWidth\n            type=\"password\"\n            label=\"Password\"\n            name=\"password\"\n            value={formik.values.password}\n            onChange={formik.handleChange}\n            error={Boolean(formik.touched.password) && formik.errors.password}\n            helperText={formik.touched.password && formik.errors.password}\n          />\n          <Button type=\"submit\" disabled={isLoading} variant=\"contained\">\n            {\n              isLoading\n                ? <CircularProgress />\n                : 'Login as Student'\n            }\n          </Button>\n          <Link to=\"/signup/student\">\n            <Typography variant=\"h6\" align=\"center\" color=\"primary\">Don&apos;t have account? Register</Typography>\n          </Link>\n        </Stack>\n      </Stack>\n    </Card>\n  );\n}\n","import React from 'react';\n\nimport {\n  Stack,\n  Card,\n  Button,\n  Typography,\n  TextField,\n  CircularProgress,\n} from '@mui/material';\n\nimport {\n  useMutation,\n} from 'react-query';\n\nimport { useFormik } from 'formik';\nimport * as yup from 'yup';\n\nimport { Navigate } from 'react-router-dom';\n\nimport { useSelector, useDispatch } from 'react-redux';\nimport { login } from '../../redux/actions/account';\n\nimport { loginAdmin } from '../../api/login';\nimport * as utils from '../../utils';\n\nimport logo from '../../assets/logo.png';\nimport { addErrorToast } from '../../redux/actions/toasts';\n\nexport default function AdminLogin() {\n  const { account } = useSelector((state) => state);\n  const dispatch = useDispatch();\n  const { isLoading, mutate } = useMutation(\n    (values) => loginAdmin(values),\n    {\n      onSuccess: ({ data }) => {\n        dispatch(login(data));\n        localStorage.setItem('hts-token', data.token);\n      },\n      onError: (err) => dispatch(\n        addErrorToast({ message: err.response?.data?.error || err.message }),\n      ),\n    },\n  );\n  // Form requirements\n  const schema = yup.object({\n    email: yup.string().required('Email is required').email('Enter a valid email'),\n    password: yup.string().required('Password is required').min(8, 'Password should be at least 8 characters long'),\n  });\n  const formik = useFormik({\n    initialValues: {\n      email: '',\n      password: '',\n    },\n    validationSchema: schema,\n    onSubmit: (values) => mutate(values),\n  });\n  // -----------------\n  if (account.admin) return <Navigate replace to=\"/admin\" />;\n  return (\n    <Card elevation={3} className=\"w-full py-6 my-6\">\n      <Stack spacing={2}>\n        <img className=\"self-center w-32\" alt=\"hts logo\" src={logo} />\n        <Typography variant=\"h5\" align=\"center\">Login as an Admin</Typography>\n        <Stack spacing={2} className=\"px-6\" component=\"form\" onSubmit={formik.handleSubmit}>\n          <TextField\n            variant=\"outlined\"\n            fullWidth\n            label=\"Email\"\n            name=\"email\"\n            value={formik.values.email}\n            onChange={formik.handleChange}\n            error={formik.touched.email && formik.errors.email}\n            helperText={formik.touched.email && formik.errors.email}\n          />\n          <TextField\n            variant=\"outlined\"\n            fullWidth\n            type=\"password\"\n            label=\"Password\"\n            name=\"password\"\n            value={formik.values.password}\n            onChange={formik.handleChange}\n            error={formik.touched.password && formik.errors.password}\n            helperText={formik.touched.password && formik.errors.password}\n          />\n          <Button type=\"submit\" disabled={isLoading} variant=\"contained\">\n            {\n              isLoading\n                ? <CircularProgress />\n                : 'Login as Admin'\n            }\n          </Button>\n        </Stack>\n      </Stack>\n    </Card>\n  );\n}\n","import React from 'react';\n\nimport {\n  Routes,\n  Route,\n  Navigate,\n} from 'react-router-dom';\n\nimport {\n  CircularProgress,\n  Grid,\n} from '@mui/material';\n\nimport StudentLogin from './StudentLogin';\n// import TeacherLogin from './TeacherLogin';\nimport AdminLogin from './AdminLogin';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useQuery } from 'react-query';\n\nimport { verifyLogin } from '../../api/login';\n\nimport { login } from '../../redux/actions/account';\n\nexport default function Login() {\n  const dispatch = useDispatch();\n  const { account } = useSelector((state) => state);\n  const { isLoading } = useQuery('verify-login', () => verifyLogin(localStorage.getItem('hts-token')), {\n    onSuccess: ({ data }) => dispatch(login(data)),\n  });\n  if (account.student) return <Navigate replace to=\"/student/dashboard\" />\n  if (account.admin) return <Navigate replace to=\"/admin/dashboard\" />\n  if (account.teacher) return <Navigate replace to=\"/teacher/dashboard\" />\n  if (isLoading) return (\n    <div className=\"w-full flex p-6\">\n      <CircularProgress className=\"m-auto\" />\n    </div>\n  );\n  return (\n    <Grid container flexDirection=\"column\" justifyContent=\"center\" alignItems=\"center\" className=\"min-h-full p-6\">\n      <Grid container item maxWidth=\"sm\">\n        <Routes>\n          <Route index element={<Navigate replace to=\"/login/student\" />} />\n          <Route path=\"/student\" element={<StudentLogin />} />\n          {/* <Route path=\"/teacher\" element={<TeacherLogin />} /> */}\n          <Route path=\"/admin\" element={<AdminLogin />} />\n          <Route path=\"/*\" element={<Navigate replace to=\"/not-found\" />} />\n        </Routes>\n      </Grid>\n    </Grid>\n  );\n}\n"],"names":["login","axios","baseURL","process","headers","StudentLogin","dispatch","useDispatch","student","useSelector","state","account","useMutation","values","data","post","onSuccess","localStorage","setItem","token","onError","err","addErrorToast","message","response","error","isLoading","mutate","schema","yup","email","required","password","min","formik","useFormik","initialValues","validationSchema","onSubmit","replace","to","Card","elevation","className","Stack","spacing","Typography","variant","align","alt","src","logo","component","handleSubmit","TextField","fullWidth","label","name","value","onChange","handleChange","Boolean","touched","errors","helperText","type","Button","disabled","CircularProgress","color","AdminLogin","admin","Login","useQuery","getItem","get","authorization","teacher","Grid","container","flexDirection","justifyContent","alignItems","item","maxWidth","index","element","path"],"sourceRoot":""}