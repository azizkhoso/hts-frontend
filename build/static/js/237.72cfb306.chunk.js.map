{"version":3,"file":"static/js/237.72cfb306.chunk.js","mappings":"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","sources":["api/signup.js","components/signup/VerificationEamilModal.jsx","components/signup/StudentSignup.jsx","components/signup/index.jsx"],"sourcesContent":["/* eslint-disable import/prefer-default-export */\nimport axios from 'axios';\n\nconst login = axios.create({\n  baseURL: `${process.env.REACT_APP_BACKEND_URL}/signup`,\n  headers: {\n    'Content-Type': 'application/json',\n  },\n});\n\nexport function signupStudent(data) {\n  return login.post('/student', data);\n}\n","import React from 'react';\nimport { Dialog, DialogContent, Box , Typography} from '@mui/material';\n\nconst VerificationEmailModal = ({ isOpen, onClose }) => {\n  return (\n    <Dialog\n      open={isOpen}\n      onClose={onClose}\n    >\n      <DialogContent>\n      <Box p=\"4\">\n        <Typography variant=\"h6\" textAlign=\"center\">Verification Email Sent</Typography>\n        <Typography variant=\"body1\">Please check your email to verify your account</Typography>\n      </Box>\n      </DialogContent>\n    </Dialog>\n  );\n};\n\nexport default VerificationEmailModal;\n","import React from 'react';\n\nimport { Stack, Card, Button, Typography, TextField, CircularProgress } from '@mui/material';\n\nimport { Link, useNavigate } from 'react-router-dom';\n\nimport { useDispatch } from 'react-redux';\n\nimport { useFormik } from 'formik';\nimport * as yup from 'yup';\n\nimport { useMutation } from 'react-query';\nimport { addSuccessToast, addErrorToast } from '../../redux/actions/toasts';\nimport { signupStudent } from '../../api/signup';\n\nimport logo from '../../assets/logo.png';\nimport VerificationEmailModal from './VerificationEamilModal';\n\nexport default function StudentSignup() {\n  const [isOpenModal, setOpenModal] = React.useState(false);\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const { isLoading, mutate } = useMutation((data) => signupStudent(data), {\n    onSuccess: () => {\n      dispatch(addSuccessToast({ message: 'Student registered, verification email sent successfully' }));\n      setOpenModal(true);\n    },\n    onError: (err) =>\n      dispatch(addErrorToast({ message: err.response?.data?.error || err.message })),\n  });\n  // Form requirements\n  const schema = yup.object({\n    fullName: yup\n      .string()\n      .required('Full Name is required')\n      .min(2, 'Full Name should be at least 2 characters long'),\n    email: yup.string().required('Email is required').email('Enter a valid email'),\n    password: yup\n      .string()\n      .required('Password is required')\n      .min(8, 'Password should be at least 8 characters long'),\n    cnic: yup\n      .number()\n      .required('CNIC is required')\n      .min(1000000000000, 'Enter a valid CNIC')\n      .max(9999999999999, 'Enter a valid CNIC'),\n  });\n  const formik = useFormik({\n    initialValues: {\n      fullName: '',\n      email: '',\n      password: '',\n      cnic: 0,\n    },\n    validationSchema: schema,\n    onSubmit: (values) => mutate(values),\n  });\n  // -----------------\n  return (\n    <Card elevation={3} className=\"w-full pb-6 my-6\">\n      <Stack spacing={2}>\n        {/* <div className=\"flex\">\n          <Button variant=\"outlined\" className=\"flex-grow\">Teacher</Button>\n          <Button variant=\"outlined\" className=\"flex-grow\">Student</Button>\n        </div> */}\n        <Typography variant=\"h5\" align=\"center\">\n          Welcome to\n        </Typography>\n        <img className=\"self-center w-32\" alt=\"hts logo\" src={logo} />\n        <Typography variant=\"h5\" align=\"center\">\n          Sign up as a Student\n        </Typography>\n        <Stack spacing={2} className=\"px-6\" component=\"form\" onSubmit={formik.handleSubmit}>\n          <TextField\n            variant=\"outlined\"\n            fullWidth\n            label=\"Full Name\"\n            name=\"fullName\"\n            value={formik.values.fullName}\n            onChange={formik.handleChange}\n            error={formik.touched.fullName && formik.errors.fullName}\n            helperText={formik.touched.fullName && formik.errors.fullName}\n          />\n          <TextField\n            variant=\"outlined\"\n            fullWidth\n            label=\"Email\"\n            name=\"email\"\n            value={formik.values.email}\n            onChange={formik.handleChange}\n            error={formik.touched.email && formik.errors.email}\n            helperText={formik.touched.email && formik.errors.email}\n          />\n          <TextField\n            variant=\"outlined\"\n            fullWidth\n            type=\"password\"\n            label=\"Password\"\n            name=\"password\"\n            value={formik.values.password}\n            onChange={formik.handleChange}\n            error={formik.touched.password && formik.errors.password}\n            helperText={formik.touched.password && formik.errors.password}\n          />\n          <TextField\n            variant=\"outlined\"\n            fullWidth\n            type=\"number\"\n            label=\"CNIC\"\n            name=\"cnic\"\n            value={formik.values.cnic}\n            onChange={formik.handleChange}\n            error={formik.touched.cnic && formik.errors.cnic}\n            helperText={formik.touched.cnic && formik.errors.cnic}\n          />\n          <Button type=\"submit\" disabled={isLoading} variant=\"outlined\">\n            {isLoading ? <CircularProgress /> : 'Signup as a Student'}\n          </Button>\n          <Link to=\"/login/student\">\n            <Typography variant=\"h6\" align=\"center\" color=\"primary\">\n              Already registered? Login\n            </Typography>\n          </Link>\n        </Stack>\n      </Stack>\n      <VerificationEmailModal isOpen={isOpenModal} onClose={() => { setOpenModal(false); navigate('/login'); }} />\n    </Card>\n  );\n}\n","import React from 'react';\n\nimport {\n  Routes,\n  Route,\n  Navigate,\n} from 'react-router-dom';\n\nimport {\n  Grid,\n} from '@mui/material';\n\nimport StudentSignup from './StudentSignup';\n\nexport default function SignUp() {\n  return (\n    <Grid container flexDirection=\"column\" justifyContent=\"center\" alignItems=\"center\" className=\"min-h-full p-6\">\n      <Grid container item maxWidth=\"sm\">\n        <Routes>\n          <Route index element={<Navigate replace to=\"/signup/student\" />} />\n          <Route path=\"/student\" element={<StudentSignup />} />\n          <Route path=\"/*\" element={<Navigate replace to=\"/not-found\" />} />\n        </Routes>\n      </Grid>\n    </Grid>\n  );\n}\n"],"names":["login","axios","baseURL","concat","process","headers","_ref","isOpen","onClose","_jsx","Dialog","open","children","DialogContent","_jsxs","Box","p","Typography","variant","textAlign","StudentSignup","_React$useState","React","_React$useState2","_slicedToArray","isOpenModal","setOpenModal","dispatch","useDispatch","navigate","useNavigate","_useMutation","useMutation","data","post","signupStudent","onSuccess","addSuccessToast","message","onError","err","_err$response","_err$response$data","addErrorToast","response","error","isLoading","mutate","schema","yup","fullName","required","min","email","password","cnic","max","formik","useFormik","initialValues","validationSchema","onSubmit","values","Card","elevation","className","Stack","spacing","align","alt","src","logo","component","handleSubmit","TextField","fullWidth","label","name","value","onChange","handleChange","touched","errors","helperText","type","Button","disabled","CircularProgress","Link","to","color","VerificationEmailModal","SignUp","Grid","container","flexDirection","justifyContent","alignItems","item","maxWidth","Routes","Route","index","element","Navigate","replace","path"],"sourceRoot":""}