{"version":3,"file":"static/js/315.b34c1009.chunk.js","mappings":"mOAGMA,EAAWC,IAAAA,OAAa,CAC5BC,QAASC,uDAOJ,SAASC,EAAiBC,GAC/B,OAAOL,EAASM,IAAI,iBAAD,OAAkBD,EAAc,oBAAsB,IAC3E,CAEO,SAASE,EAAaC,GAM3B,OAAOR,EAASM,IAAI,eAAD,OAAgBG,EAAAA,UAAsBD,EAAOE,SAAS,KAC3E,CAEO,SAASC,EAAYC,GAC1B,OAAOZ,EAASM,IAAI,eAAD,OAAgBM,GACrC,C,yMCzBA,EAAyB,8BAAzB,EAAwE,sC,SC+ExE,MA1DA,WACE,IAAMC,GAAWC,EAAAA,EAAAA,MACjB,EAA0CC,EAAAA,SAAe,IAAG,eAArDC,EAAa,KAAEC,EAAgB,KAC9BC,GAAcC,EAAAA,EAAAA,UAAS,oBAAoB,kBAAMf,EAAAA,EAAAA,KAAkB,GAAE,CAC3EgB,UAAW,SAACC,GAAC,OAAKJ,EAAiBI,EAAEC,KAAKN,cAAc,EACxDO,QAAS,SAACC,GAAG,eAAKX,GAChBY,EAAAA,EAAAA,IAAc,CAAEC,SAAqB,QAAZ,EAAAF,EAAIG,gBAAQ,OAAM,QAAN,EAAZ,EAAcL,YAAI,WAAN,EAAZ,EAAoBM,QAASJ,EAAIE,UAC3D,IAJKR,UAMR,OACE,iBAAKW,UAAU,eAAc,WAC3B,SAACC,EAAA,EAAS,CAACC,SAAS,KAAKF,UAAWG,EAAc,UAChD,SAACC,EAAA,EAAU,CACTC,QAAQ,KACRC,MAAM,UACNN,UAAWG,EAAyB,SACrC,qBAIH,UAACF,EAAA,EAAS,CAACC,SAAS,KAAKF,UAAU,QAAO,UAEtCX,IACE,gBAAKW,UAAU,cAAa,UAC1B,SAACO,EAAA,EAAgB,CAACP,UAAU,cAK/BX,GAAsC,IAAzBF,EAAcqB,SAC1B,SAACJ,EAAA,EAAU,CAACK,MAAM,SAAQ,SAAC,0BAI5BpB,GAAaF,EAAcuB,KAAI,SAACC,GAAG,OAClC,UAACC,EAAA,EAAS,YACR,UAACC,EAAA,EAAgB,CAACC,YAAY,SAACC,EAAA,EAAU,IAAI,UAC1CJ,EAAInC,cAAe,uBAAG,mBACtBmC,EAAIK,UAEP,UAACC,EAAA,EAAgB,CAACjB,UAAU,oBAAmB,UAC5CW,EAAIO,QAEHP,EAAIQ,OACF,cAAGC,KAAMT,EAAIQ,KAAK,UAChB,SAACf,EAAA,EAAU,CAACE,MAAM,UAAUN,UAAU,OAAM,SAAC,qBAVvCW,EAAI5B,IAeR,SAMxB,C","sources":["api/others.js","webpack://hts-frontend/./src/components/announcements/Announcements.module.css?13dc","components/announcements/index.jsx"],"sourcesContent":["import axios from 'axios';\nimport queryString from 'query-string';\n\nconst instance = axios.create({\n  baseURL: process.env.REACT_APP_BACKEND_URL,\n});\n\n/**\n * \n * @param {Boolean} isImportant Fetch only important announcements if true\n */\nexport function getAnnouncements(isImportant) {\n  return instance.get(`/announcements${isImportant ? '?isImportant=true' : ''}`);\n}\n\nexport function getDemoTests(values) {\n  /* Due to refetch of react query we get\n    values = {\n      queryKey: ['demo-tests', { subject: <value> }]\n    }\n  */\n  return instance.get(`/demo-tests?${queryString.stringify(values.queryKey[1])}`);\n}\n\nexport function getDemoTest(_id) {\n  return instance.get(`/demo-tests/${_id}`);\n}\n\nexport default instance;\n","// extracted by mini-css-extract-plugin\nexport default {\"header\":\"Announcements_header__rIPL3\",\"header-heading\":\"Announcements_header-heading__3q5oj\",\"header-paragraph\":\"Announcements_header-paragraph__zHGPd\",\"content-container\":\"Announcements_content-container__UnNY4\",\"card\":\"Announcements_card__3764a\",\"heading\":\"Announcements_heading__LNghF\",\"content\":\"Announcements_content__BV-7d\"};","import React from 'react';\n\nimport {\n  Typography,\n  Container,\n  Accordion,\n  AccordionSummary,\n  AccordionDetails,\n  CircularProgress,\n} from '@mui/material';\n\nimport { ExpandMore } from '@mui/icons-material';\n\nimport { useDispatch } from 'react-redux';\n\nimport { useQuery } from 'react-query';\nimport { getAnnouncements } from '../../api/others';\n\nimport { addErrorToast } from '../../redux/actions/toasts';\n\nimport styles from './Announcements.module.css';\n\nfunction Announcemnts() {\n  const dispatch = useDispatch();\n  const [announcements, setAnnouncements] = React.useState([]);\n  const { isLoading } = useQuery('allAnnouncements', () => getAnnouncements(), {\n    onSuccess: (r) => setAnnouncements(r.data.announcements),\n    onError: (err) => dispatch(\n      addErrorToast({ message: err.response?.data?.error || err.message }),\n    ),\n  })\n  return (\n    <div className=\"landing-page\">\n      <Container maxWidth=\"lg\" className={styles.header}>\n        <Typography\n          variant=\"h4\"\n          color=\"primary\"\n          className={styles['header-heading']}\n        >\n          Announcements\n        </Typography>\n      </Container>\n      <Container maxWidth=\"lg\" className=\"stack\">\n        {\n          isLoading && (\n            <div className=\"flex w-full\">\n              <CircularProgress className=\"m-auto\" />\n            </div>\n          )\n        }\n        {\n          !isLoading && announcements.length === 0 && (\n            <Typography align=\"center\">No announcements yet</Typography>\n          )\n        }\n        {\n          !isLoading && announcements.map((ann) => (\n            <Accordion key={ann._id}>\n              <AccordionSummary expandIcon={<ExpandMore />}>\n                {ann.isImportant && <b>Important:&nbsp;</b>}\n                {ann.title}\n              </AccordionSummary>\n              <AccordionDetails className=\"bg-gray-100 stack\">\n                {ann.details}\n                {\n                  ann.link && (\n                    <a href={ann.link}>\n                      <Typography color=\"primary\" className=\"mt-3\">View More</Typography>\n                    </a>\n                  )\n                }\n              </AccordionDetails>\n            </Accordion>\n          ))\n        }\n      </Container>\n    </div>\n  );\n}\n\nexport default Announcemnts;\n"],"names":["instance","axios","baseURL","process","getAnnouncements","isImportant","get","getDemoTests","values","queryString","queryKey","getDemoTest","_id","dispatch","useDispatch","React","announcements","setAnnouncements","isLoading","useQuery","onSuccess","r","data","onError","err","addErrorToast","message","response","error","className","Container","maxWidth","styles","Typography","variant","color","CircularProgress","length","align","map","ann","Accordion","AccordionSummary","expandIcon","ExpandMore","title","AccordionDetails","details","link","href"],"sourceRoot":""}