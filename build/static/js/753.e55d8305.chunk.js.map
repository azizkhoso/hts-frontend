{"version":3,"file":"static/js/753.e55d8305.chunk.js","mappings":"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","sources":["api/login.js","components/login/StudentLogin.jsx","components/login/AdminLogin.jsx","components/login/index.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst login = axios.create({\n  baseURL: `${process.env.REACT_APP_BACKEND_URL}/login`,\n  headers: {\n    'Content-Type': 'application/json',\n  },\n});\n\n/**\n * Verify login function takes token and returns user object\n * @param {String} token \n * @returns {Promise}\n */\n\nexport function verifyLogin(token) {\n  return login.get('/verify', {\n    headers: {\n      authorization: `Bearer ${token}`,\n    }\n  });\n}\n\nexport function loginAdmin(data) {\n  return login.post('/admin', data);\n}\n\nexport function loginStudent(data) {\n  return login.post('/student', data);\n}\n\nexport function loginTeacher(data) {\n  return login.post('/teacher', data);\n}\n","import React from 'react';\n\nimport { Stack, Card, Button, Typography, TextField, CircularProgress } from '@mui/material';\n\nimport { useMutation } from 'react-query';\n\nimport { useFormik } from 'formik';\nimport * as yup from 'yup';\n\nimport { Link, Navigate } from 'react-router-dom';\n\nimport { useSelector, useDispatch } from 'react-redux';\nimport { login } from '../../redux/actions/account';\n\nimport { loginStudent } from '../../api/login';\n\nimport logo from '../../assets/logo.png';\nimport { addErrorToast } from '../../redux/actions/toasts';\n\nexport default function StudentLogin() {\n  const dispatch = useDispatch();\n  // const navigate = useNavigate();\n  const student = useSelector((state) => state.account.student);\n  const { isLoading, mutate } = useMutation((values) => loginStudent(values), {\n    onSuccess: ({ data }) => {\n      dispatch(login(data));\n      localStorage.setItem('hts-token', data.token);\n    },\n    onError: (err) =>\n      dispatch(addErrorToast({ message: err.response?.data?.error || err.message })),\n  });\n  // Form requirements\n  const schema = yup.object({\n    email: yup.string().required('Email is required').email('Enter a valid email'),\n    password: yup\n      .string()\n      .required('Password is required')\n      .min(8, 'Password should be at least 8 characters long'),\n  });\n  const formik = useFormik({\n    initialValues: {\n      email: '',\n      password: '',\n    },\n    validationSchema: schema,\n    onSubmit: (values) => mutate(values),\n  });\n  // -----------------\n  if (student) return <Navigate replace to=\"/student\" />;\n  return (\n    <Card elevation={3} className=\"w-full pb-6 my-6\">\n      <Stack spacing={2}>\n        {/* <div className=\"flex\">\n          <Button variant=\"outlined\" className=\"flex-grow\"\n          onClick={() => navigate('/login/teacher')}>Teacher</Button>\n          <Button variant=\"outlined\" className=\"flex-grow\"\n          onClick={() => navigate('/login/student')}>Student</Button>\n        </div> */}\n        <Typography variant=\"h5\" align=\"center\">\n          Welcome Back\n        </Typography>\n        <img className=\"self-center w-32\" alt=\"hts logo\" src={logo} />\n        <Typography variant=\"h5\" align=\"center\">\n          Login as a Student\n        </Typography>\n        <Stack spacing={2} className=\"px-6\" component=\"form\" onSubmit={formik.handleSubmit}>\n          <TextField\n            variant=\"outlined\"\n            fullWidth\n            label=\"Email\"\n            name=\"email\"\n            value={formik.values.email}\n            onChange={formik.handleChange}\n            error={Boolean(formik.touched.email) && formik.errors.email}\n            helperText={formik.touched.email && formik.errors.email}\n          />\n          <TextField\n            variant=\"outlined\"\n            fullWidth\n            type=\"password\"\n            label=\"Password\"\n            name=\"password\"\n            value={formik.values.password}\n            onChange={formik.handleChange}\n            error={Boolean(formik.touched.password) && formik.errors.password}\n            helperText={formik.touched.password && formik.errors.password}\n          />\n          <Button type=\"submit\" disabled={isLoading} variant=\"outlined\">\n            {isLoading ? <CircularProgress /> : 'Login as Student'}\n          </Button>\n          <Link to=\"/signup/student\">\n            <Typography variant=\"h6\" align=\"center\" color=\"primary\">\n              Don&apos;t have account? Register\n            </Typography>\n          </Link>\n        </Stack>\n      </Stack>\n    </Card>\n  );\n}\n","import React from 'react';\n\nimport {\n  Stack,\n  Card,\n  Button,\n  Typography,\n  TextField,\n  CircularProgress,\n} from '@mui/material';\n\nimport {\n  useMutation,\n} from 'react-query';\n\nimport { useFormik } from 'formik';\nimport * as yup from 'yup';\n\nimport { Navigate } from 'react-router-dom';\n\nimport { useSelector, useDispatch } from 'react-redux';\nimport { login } from '../../redux/actions/account';\n\nimport { loginAdmin } from '../../api/login';\nimport * as utils from '../../utils';\n\nimport logo from '../../assets/logo.png';\nimport { addErrorToast } from '../../redux/actions/toasts';\n\nexport default function AdminLogin() {\n  const { account } = useSelector((state) => state);\n  const dispatch = useDispatch();\n  const { isLoading, mutate } = useMutation(\n    (values) => loginAdmin(values),\n    {\n      onSuccess: ({ data }) => {\n        dispatch(login(data));\n        localStorage.setItem('hts-token', data.token);\n      },\n      onError: (err) => dispatch(\n        addErrorToast({ message: err.response?.data?.error || err.message }),\n      ),\n    },\n  );\n  // Form requirements\n  const schema = yup.object({\n    email: yup.string().required('Email is required').email('Enter a valid email'),\n    password: yup.string().required('Password is required').min(8, 'Password should be at least 8 characters long'),\n  });\n  const formik = useFormik({\n    initialValues: {\n      email: '',\n      password: '',\n    },\n    validationSchema: schema,\n    onSubmit: (values) => mutate(values),\n  });\n  // -----------------\n  if (account.admin) return <Navigate replace to=\"/admin\" />;\n  return (\n    <Card elevation={3} className=\"w-full py-6 my-6\">\n      <Stack spacing={2}>\n        <img className=\"self-center w-32\" alt=\"hts logo\" src={logo} />\n        <Typography variant=\"h5\" align=\"center\">Login as an Admin</Typography>\n        <Stack spacing={2} className=\"px-6\" component=\"form\" onSubmit={formik.handleSubmit}>\n          <TextField\n            variant=\"outlined\"\n            fullWidth\n            label=\"Email\"\n            name=\"email\"\n            value={formik.values.email}\n            onChange={formik.handleChange}\n            error={formik.touched.email && formik.errors.email}\n            helperText={formik.touched.email && formik.errors.email}\n          />\n          <TextField\n            variant=\"outlined\"\n            fullWidth\n            type=\"password\"\n            label=\"Password\"\n            name=\"password\"\n            value={formik.values.password}\n            onChange={formik.handleChange}\n            error={formik.touched.password && formik.errors.password}\n            helperText={formik.touched.password && formik.errors.password}\n          />\n          <Button type=\"submit\" disabled={isLoading} variant=\"outlined\">\n            {\n              isLoading\n                ? <CircularProgress />\n                : 'Login as Admin'\n            }\n          </Button>\n        </Stack>\n      </Stack>\n    </Card>\n  );\n}\n","import React from 'react';\n\nimport {\n  Routes,\n  Route,\n  Navigate,\n} from 'react-router-dom';\n\nimport {\n  CircularProgress,\n  Grid,\n} from '@mui/material';\n\nimport StudentLogin from './StudentLogin';\n// import TeacherLogin from './TeacherLogin';\nimport AdminLogin from './AdminLogin';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useQuery } from 'react-query';\n\nimport { verifyLogin } from '../../api/login';\n\nimport { login } from '../../redux/actions/account';\n\nexport default function Login() {\n  const dispatch = useDispatch();\n  const { account } = useSelector((state) => state);\n  const { isLoading } = useQuery('verify-login', () => verifyLogin(localStorage.getItem('hts-token')), {\n    onSuccess: ({ data }) => dispatch(login(data)),\n  });\n  if (account.student) return <Navigate replace to=\"/student/dashboard\" />\n  if (account.admin) return <Navigate replace to=\"/admin/dashboard\" />\n  if (account.teacher) return <Navigate replace to=\"/teacher/dashboard\" />\n  if (isLoading) return (\n    <div className=\"w-full flex p-6\">\n      <CircularProgress className=\"m-auto\" />\n    </div>\n  );\n  return (\n    <Grid container flexDirection=\"column\" justifyContent=\"center\" alignItems=\"center\" className=\"min-h-full p-6\">\n      <Grid container item maxWidth=\"sm\">\n        <Routes>\n          <Route index element={<Navigate replace to=\"/login/student\" />} />\n          <Route path=\"/student\" element={<StudentLogin />} />\n          {/* <Route path=\"/teacher\" element={<TeacherLogin />} /> */}\n          <Route path=\"/admin\" element={<AdminLogin />} />\n          <Route path=\"/*\" element={<Navigate replace to=\"/not-found\" />} />\n        </Routes>\n      </Grid>\n    </Grid>\n  );\n}\n"],"names":["login","axios","baseURL","concat","process","headers","StudentLogin","dispatch","useDispatch","student","useSelector","state","account","_useMutation","useMutation","values","data","post","onSuccess","_ref","localStorage","setItem","token","onError","err","_err$response","_err$response$data","addErrorToast","message","response","error","isLoading","mutate","schema","yup","email","required","password","min","formik","useFormik","initialValues","validationSchema","onSubmit","_jsx","Navigate","replace","to","Card","elevation","className","children","_jsxs","Stack","spacing","Typography","variant","align","alt","src","logo","component","handleSubmit","TextField","fullWidth","label","name","value","onChange","handleChange","Boolean","touched","errors","helperText","type","Button","disabled","CircularProgress","Link","color","AdminLogin","admin","Login","useQuery","getItem","get","authorization","teacher","Grid","container","flexDirection","justifyContent","alignItems","item","maxWidth","Routes","Route","index","element","path"],"sourceRoot":""}