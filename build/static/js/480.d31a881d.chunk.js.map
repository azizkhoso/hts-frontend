{"version":3,"file":"static/js/480.d31a881d.chunk.js","mappings":"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","sources":["assets/request.svg","components/admin/sidebar/DrawerContent.jsx","components/admin/sidebar/index.jsx","api/admin/index.js","components/teacher/questionDialogs/NewMCQSDialog.jsx","components/teacher/questionDialogs/NewBlankDialog.jsx","components/teacher/questionDialogs/NewTrueFalseDialog.jsx","components/teacher/questionDialogs/UpdateMCQSDialog.jsx","components/teacher/questionDialogs/UpdateBlankDialog.jsx","components/teacher/questionDialogs/UpdateTrueFalseDialog.jsx","components/teacher/newTest/index.jsx","components/teacher/updateTest/index.jsx","components/admin/Submissions.jsx","components/admin/Tests.jsx","components/admin/ViewStudent.jsx","api/admin/students.js","components/admin/Students.jsx","components/admin/NewTeacher.jsx","components/admin/Teachers.jsx","components/admin/Announcements/NewAnnouncement.jsx","components/admin/Announcements/index.jsx","components/admin/TestApplications.jsx","components/admin/index.jsx"],"sourcesContent":["var _path;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from \"react\";\nfunction SvgRequest(_ref, svgRef) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: \"16px\",\n    height: \"16px\",\n    viewBox: \"0 0 16 16\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"currentColor\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M14.5 1h-13l-.5.5v10l.5.5H4v2.5l.854.354L7.707 12H14.5l.5-.5v-10l-.5-.5zM14 11H7.5l-.354.146L5 13.293V11.5l-.5-.5H2V2h12v9zm-4-1H6V8.979h4V10zM7.5 3h1v2h2v1h-2v2h-1V6h-2V5h2V3z\"\n  })));\n}\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgRequest);\nexport default __webpack_public_path__ + \"static/media/request.d2eb88879d61411ddb7f5d6ad70d7473.svg\";\nexport { ForwardRef as ReactComponent };","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport {\n  Divider,\n  List,\n  ListItemButton,\n  ListItemIcon,\n  ListItemText,\n  Stack,\n  IconButton,\n} from '@mui/material';\n\nimport {\n  Dashboard,\n  Announcement,\n  Close,\n  Person,\n  Quiz,\n} from '@mui/icons-material';\n\nimport { useNavigate, useLocation } from 'react-router-dom';\n\nimport logo from '../../../assets/logo.png';\nimport student from '../../../assets/student.png';\nimport teacher from '../../../assets/teacher.png';\nimport request from '../../../assets/request.svg';\n\nexport default function DrawerContent({ handleClose }) {\n  const navigate = useNavigate();\n  const location = useLocation();\n  const listItems = [\n    {\n      title: 'Dashboard',\n      link: '/admin/dashboard',\n      icon: <Dashboard />,\n    },\n    {\n      title: 'Announcements',\n      link: '/admin/announcements',\n      icon: <Announcement />,\n    },\n    {\n      title: 'Students',\n      link: '/admin/students',\n      icon: <img src={student} alt=\"student\" className=\"w-6 h-6\" />,\n    },\n    {\n      title: 'Teachers',\n      link: '/admin/teachers',\n      icon: <img src={teacher} alt=\"teacher\" className=\"w-6 h-6\" />,\n    },\n    {\n      title: 'Tests',\n      link: '/admin/tests',\n      icon: <Quiz />,\n    },\n    {\n      title: 'Test Applications',\n      link: '/admin/test-applications',\n      icon: <img src={request} alt=\"teacher\" className=\"w-6 h-6\" />,\n    },\n    {\n      title: 'Profile',\n      link: '/admin/profile',\n      icon: <Person />,\n    },\n  ];\n  return (\n    <Stack sx={{ width: '100%' }}>\n      <span className=\"flex justify-end md:hidden\">\n        <IconButton onClick={() => handleClose()}>\n          <Close />\n        </IconButton>\n      </span>\n      <img src={logo} alt=\"hts\" className=\"self-center w-40 my-3\" />\n      <List sx={{ py: 0 }}>\n        <Divider orientation=\"horizontal\" />\n        {\n          listItems.map((item) => (\n            <ListItemButton key={item.title} className={`${location.pathname.startsWith(item.link) && 'bg-blue-100'}`} onClick={() => navigate(item.link)}>\n              <ListItemIcon>{item.icon}</ListItemIcon>\n              <ListItemText primary={item.title} />\n            </ListItemButton>\n          ))\n        }\n      </List>\n    </Stack>\n  );\n}\n\nDrawerContent.defaultProps = {\n  handleClose: () => {},\n};\n\nDrawerContent.propTypes = {\n  handleClose: PropTypes.func,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport {\n  Drawer,\n} from '@mui/material';\nimport DrawerContent from './DrawerContent';\n\nexport default function Sidebar({ open, setOpen }) {\n  return (\n    <>\n      <div className=\"hidden md:block md:w-3/12 lg:w-3/12 2xl:w-2/12\">\n        <Drawer\n          variant=\"permanent\"\n          sx={{ width: '100%' }}\n          classes={{ paper: 'md:w-3/12 lg:w-3/12 2xl:w-2/12' }}\n        >\n          <DrawerContent />\n        </Drawer>\n      </div>\n      <div className=\"block md:hidden\">\n        <Drawer\n          variant=\"temporary\"\n          open={open}\n          onClose={() => setOpen(false)}\n        >\n          <DrawerContent handleClose={() => setOpen(false)} />\n        </Drawer>\n      </div>\n    </>\n  );\n}\n\nSidebar.propTypes = {\n  open: PropTypes.bool.isRequired,\n  setOpen: PropTypes.func.isRequired,\n};\n","/* eslint-disable no-underscore-dangle */\n/* eslint-disable no-continue */\n/* eslint-disable no-restricted-syntax */\nimport axios from 'axios';\n\nconst admin = axios.create({\n  baseURL: `${process.env.REACT_APP_BACKEND_URL}/admin`,\n});\n\n// Adding interceptor so that on every request, authorization header should be available\nadmin.interceptors.request.use((config) => {\n  const updated = {\n    ...config,\n    headers: {\n      ...config.headers,\n      common: {\n        ...config.headers.common,\n        authorization: `Bearer ${localStorage.getItem('hts-token')}`,\n      },\n    },\n  };\n  return updated;\n});\n\nexport function getAnnouncements() {\n  return admin.get('/announcements');\n}\n\nexport function newAnnouncement(data) {\n  return admin.post('/announcements', data);\n}\n\nexport function deleteAnnouncement(_id) {\n  return admin.delete(`/announcements/${_id}`);\n}\n\nexport function getTests() {\n  return admin.get('/tests');\n}\n\nexport function getTest(_id) {\n  return admin.get(`/tests/${_id}`);\n}\n\nexport function newTest(data) {\n  const fd = new FormData();\n  fd.append('title', data.title);\n  fd.append('subject', data.subject);\n  fd.append('startsAt', data.startsAt);\n  fd.append('submittableBefore', data.submittableBefore);\n  fd.append('isDemo', Boolean(data.isDemo));\n  fd.append('questions', JSON.stringify(data.questions));\n  data.questions.forEach((q) => fd.append('images', q.image || 'no image'));\n  return admin.post('/tests', fd, {\n    headers: {\n      'Content-Type': 'multipart/form-data',\n    },\n  });\n}\n\nexport function updateTest(data) {\n  const fd = new FormData();\n  fd.append('_id', data._id);\n  fd.append('title', data.title);\n  fd.append('subject', data.subject);\n  fd.append('startsAt', data.startsAt);\n  fd.append('submittableBefore', data.submittableBefore);\n  fd.append('isDemo', data.isDemo === 'true');\n  fd.append('questions', JSON.stringify(data.questions));\n  data.questions.forEach((q) => typeof q.image === 'object' && fd.append('images', q.image));\n  return admin.post('/tests/update', fd, {\n    headers: {\n      'Content-Type': 'multipart/form-data',\n    },\n  });\n}\n\nexport function getSubmissions(testId) {\n  return admin.get(`/submissions/${testId}`);\n}\n\nexport function deleteTest(_id) {\n  return admin.delete(`/tests/${_id}`);\n}\n\nexport function getTestApplications(testId){\n  return admin.get(`/test-applications/${testId}`);\n}\n\nexport function updateTestApplications(data = { _id: 'undefined', approved: false }){\n  return admin.put(`/test-applications/`, data);\n}\n\nexport default admin;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport {\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  Stack,\n  TextField,\n  Typography,\n  Select,\n  MenuItem,\n  Button,\n} from '@mui/material';\n\nimport {\n  Add, Close,\n} from '@mui/icons-material';\n\nimport { useFormik } from 'formik';\nimport * as yup from 'yup';\n\nimport { nanoid } from 'nanoid';\n\nexport default function NewMCQSDialog({ open, handleClose, handleSubmit }) {\n  const imgRef = React.useRef();\n  const schema = yup.object({\n    statement: yup.string().required('Question Statement is required').min(3, 'Enter at least 3 characters'),\n    image: yup.mixed().test('fileSize', 'File should not be larger than 30kB', (value) => {\n      if (!value) return true;\n      return value.size <= 30000;\n    }),\n    A: yup.string().required('Option A is required'),\n    B: yup.string().required('Option B is required'),\n    C: yup.string().required('Option C is required'),\n    D: yup.string().required('Option D is required'),\n    answer: yup.string().required('Correct Option is required'),\n    duration: yup.number().required('Duration is required').min(5, 'At least 5 seconds should be given').max(180, 'At most 3 minutes (180s) should be given'),\n  });\n  const formik = useFormik({\n    initialValues: {\n      statement: '',\n      image: null,\n      A: '',\n      B: '',\n      C: '',\n      D: '',\n      answer: 'A',\n      duration: 5,\n    },\n    validationSchema: schema,\n    onSubmit: (values) => {\n      formik.resetForm();\n      handleSubmit({ ...values, type: 'MCQS', id: nanoid(11) });\n      handleClose();\n    },\n  });\n  // Form should reset when dialog is closes\n  React.useEffect(() => formik.resetForm(), []);\n  return (\n    <Dialog\n      open={open}\n      onClose={() => handleClose()}\n      PaperProps={{\n        sx: { minWidth: { xs: '90%', lg: '80vw', xl: '60vw' } },\n      }}\n    >\n      <form onSubmit={formik.handleSubmit} className=\"flex flex-col w-full\">\n        <DialogTitle className=\"text-center\">New MCQS Question</DialogTitle>\n        <DialogContent style={{ paddingTop: '0.5rem' }}>\n          <Stack spacing={1}>\n            <TextField\n              variant=\"outlined\"\n              onChange={formik.handleChange}\n              size=\"small\"\n              name=\"statement\"\n              label=\"Question Statement\"\n              fullWidth\n              value={formik.values.statement}\n              error={formik.touched.statement && formik.errors.statement}\n              helperText={formik.touched && formik.errors.statement}\n            />\n            <div className={`${formik.errors.image ? 'border-red-500' : ''} flex flex-col w-full border rounded-lg`}>\n              <img\n                className=\"self-center w-full max-w-xs\"\n                src={imgRef && (\n                  imgRef.current && (\n                    imgRef.current.files[0] && (\n                      URL.createObjectURL(imgRef.current.files[0])\n                    )\n                  )\n                )}\n                alt=\"preview\"\n              />\n              <input\n                type=\"file\"\n                accept=\"image/*\"\n                ref={imgRef}\n                onChange={({ target }) => formik.setFieldValue('image', target.files[0])}\n              />\n              {formik.errors.image && <small className=\"text-red-500\">{formik.errors.image}</small>}\n            </div>\n            <div className=\"flex items-center gap-3\">\n              <Typography variant=\"h6\">A.</Typography>\n              <TextField\n                variant=\"outlined\"\n                onChange={formik.handleChange}\n                size=\"small\"\n                name=\"A\"\n                className=\"flex-grow\"\n                value={formik.values.A}\n                error={formik.touched.A && formik.errors.A}\n                helperText={formik.touched.A && formik.errors.A}\n              />\n            </div>\n            <div className=\"flex items-center gap-3\">\n              <Typography variant=\"h6\">B.</Typography>\n              <TextField\n                variant=\"outlined\"\n                onChange={formik.handleChange}\n                size=\"small\"\n                name=\"B\"\n                className=\"flex-grow\"\n                value={formik.values.B}\n                error={formik.touched.B && formik.errors.B}\n                helperText={formik.touched.B && formik.errors.B}\n              />\n            </div>\n            <div className=\"flex items-center gap-3\">\n              <Typography variant=\"h6\">C.</Typography>\n              <TextField\n                variant=\"outlined\"\n                onChange={formik.handleChange}\n                size=\"small\"\n                name=\"C\"\n                className=\"flex-grow\"\n                value={formik.values.C}\n                error={formik.touched.C && formik.errors.C}\n                helperText={formik.touched.C && formik.errors.C}\n              />\n            </div>\n            <div className=\"flex items-center gap-3\">\n              <Typography variant=\"h6\">D.</Typography>\n              <TextField\n                variant=\"outlined\"\n                onChange={formik.handleChange}\n                size=\"small\"\n                name=\"D\"\n                className=\"flex-grow\"\n                value={formik.values.D}\n                error={formik.touched.D && formik.errors.D}\n                helperText={formik.touched.D && formik.errors.D}\n              />\n            </div>\n            <div className=\"flex flex-col items-center gap-3 md:flex-row\">\n              <div className=\"flex items-stretch w-full gap-1 md:w-auto\">\n                <Typography variant=\"h6\">Correct Option:</Typography>\n                <Select\n                  variant=\"outlined\"\n                  className=\"self-center flex-grow md:flex-grow-0\"\n                  onChange={formik.handleChange}\n                  size=\"small\"\n                  name=\"answer\"\n                  value={formik.values.answer}\n                  error={formik.touched.answer && formik.errors.answer}\n                >\n                  <MenuItem value=\"A\">A</MenuItem>\n                  <MenuItem value=\"B\">B</MenuItem>\n                  <MenuItem value=\"C\">C</MenuItem>\n                  <MenuItem value=\"D\">D</MenuItem>\n                </Select>\n              </div>\n              <span className=\"flex-grow hidden md:block\" />\n              <div className=\"flex flex-col gap-3 md:flex-row\">\n                <div className=\"flex items-center gap-1\">\n                  <Typography variant=\"h6\">Duration:</Typography>\n                  <TextField\n                    variant=\"outlined\"\n                    size=\"small\"\n                    type=\"number\"\n                    InputProps={{\n                      endAdornment: 'Seconds',\n                    }}\n                    name=\"duration\"\n                    onChange={formik.handleChange}\n                    value={formik.values.duration}\n                    error={formik.touched.duration && formik.errors.duration}\n                    helperText={formik.touched.duration && formik.errors.duration}\n                  />\n                </div>\n                <Button variant=\"contained\" color=\"error\" className=\"md:self-center\" startIcon={<Close />} onClick={() => { formik.resetForm(); handleClose(); }}>Cancel</Button>\n                <Button variant=\"contained\" type=\"submit\" className=\"md:self-center\" startIcon={<Add />}>Add</Button>\n              </div>\n            </div>\n          </Stack>\n        </DialogContent>\n      </form>\n    </Dialog>\n  );\n}\n\nNewMCQSDialog.propTypes = {\n  open: PropTypes.bool.isRequired,\n  handleClose: PropTypes.func.isRequired,\n  handleSubmit: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport {\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  Stack,\n  TextField,\n  Button,\n  Typography,\n} from '@mui/material';\n\nimport {\n  Close, Add,\n} from '@mui/icons-material';\n\nimport { useFormik } from 'formik';\nimport * as yup from 'yup';\n\nimport { nanoid } from 'nanoid';\n\nexport default function NewBlankDialog({ open, handleClose, handleSubmit }) {\n  const imgRef = React.useRef();\n  const schema = yup.object({\n    statement: yup.string().required('Question Statement is required').min(3, 'Enter at least 3 characters'),\n    image: yup.mixed().test('fileSize', 'File should not be larger than 30kB', (value) => {\n      if (!value) return true;\n      return value.size <= 30000;\n    }),\n    answer: yup.string().required('Answer is required'),\n    duration: yup.number().required('Duration is required').min(5, 'At least 5 seconds should be given').max(180, 'At most 3 minutes (180s) should be given'),\n  });\n  const formik = useFormik({\n    initialValues: {\n      statement: '',\n      answer: '',\n      duration: 5,\n    },\n    validationSchema: schema,\n    onSubmit: (values) => {\n      formik.resetForm();\n      handleSubmit({ ...values, type: 'Blank', id: nanoid(11) });\n      handleClose();\n    },\n  });\n  return (\n    <Dialog\n      open={open}\n      onClose={() => handleClose()}\n      PaperProps={{\n        sx: { minWidth: { xs: '90%', lg: '80vw', xl: '60vw' } },\n      }}\n    >\n      <form onSubmit={formik.handleSubmit} className=\"flex flex-col w-full\">\n        <DialogTitle className=\"text-center\">New Blank Question</DialogTitle>\n        <DialogContent style={{ paddingTop: '0.5rem' }}>\n          <Stack spacing={1}>\n            <TextField\n              variant=\"outlined\"\n              onChange={formik.handleChange}\n              size=\"small\"\n              name=\"statement\"\n              label=\"Question Statement\"\n              fullWidth\n              value={formik.values.statement}\n              error={formik.touched.statement && Boolean(formik.errors.statement)}\n              helperText={formik.touched && formik.errors.statement}\n            />\n            <div className={`${formik.errors.image ? 'border-red-500' : ''} flex flex-col w-full border rounded-lg`}>\n              <img\n                className=\"self-center w-full max-w-xs\"\n                src={imgRef && (\n                  imgRef.current && (\n                    imgRef.current.files[0] && (\n                      URL.createObjectURL(imgRef.current.files[0])\n                    )\n                  )\n                )}\n                alt=\"preview\"\n              />\n              <input\n                type=\"file\"\n                accept=\"image/*\"\n                ref={imgRef}\n                onChange={({ target }) => formik.setFieldValue('image', target.files[0])}\n              />\n              {formik.errors.image && <small className=\"text-red-500\">{formik.errors.image}</small>}\n            </div>\n            <TextField\n              variant=\"outlined\"\n              onChange={formik.handleChange}\n              size=\"small\"\n              name=\"answer\"\n              label=\"Answer\"\n              value={formik.values.answer}\n              error={formik.touched.answer && Boolean(formik.errors.answer)}\n              helperText={formik.touched && formik.errors.answer}\n            />\n            <div className=\"flex flex-col gap-3 md:flex-row\">\n              <div className=\"flex items-center gap-1\">\n                <Typography variant=\"h6\">Duration:</Typography>\n                <TextField\n                  variant=\"outlined\"\n                  size=\"small\"\n                  type=\"number\"\n                  InputProps={{\n                    endAdornment: 'Seconds',\n                  }}\n                  name=\"duration\"\n                  onChange={formik.handleChange}\n                  value={formik.values.duration}\n                  error={formik.touched.duration && Boolean(formik.errors.duration)}\n                  helperText={formik.touched.duration && formik.errors.duration}\n                />\n              </div>\n              <div className=\"flex-grow\" />\n              <Button variant=\"contained\" color=\"error\" className=\"md:self-center\" startIcon={<Close />} onClick={() => { formik.resetForm(); handleClose(); }}>Cancel</Button>\n              <Button variant=\"contained\" type=\"submit\" className=\"md:self-center\" startIcon={<Add />}>Add</Button>\n            </div>\n          </Stack>\n        </DialogContent>\n      </form>\n    </Dialog>\n  );\n}\n\nNewBlankDialog.propTypes = {\n  open: PropTypes.bool.isRequired,\n  handleClose: PropTypes.func.isRequired,\n  handleSubmit: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport {\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  Stack,\n  TextField,\n  Button,\n  Typography,\n  Select,\n  MenuItem,\n} from '@mui/material';\n\nimport {\n  Close, Add,\n} from '@mui/icons-material';\n\nimport { useFormik } from 'formik';\nimport * as yup from 'yup';\n\nimport { nanoid } from 'nanoid';\n\nexport default function NewTrueFalseDialog({ open, handleClose, handleSubmit }) {\n  const imgRef = React.useRef();\n  const schema = yup.object({\n    statement: yup.string().required('Question Statement is required').min(3, 'Enter at least 3 characters'),\n    image: yup.mixed().test('fileSize', 'File should not be larger than 30kB', (value) => {\n      if (!value) return true;\n      return value.size <= 30000;\n    }),\n    answer: yup.string().required('Answer is required'),\n    duration: yup.number().required('Duration is required').min(5, 'At least 5 seconds should be given').max(180, 'At most 3 minutes (180s) should be given'),\n  });\n  const formik = useFormik({\n    initialValues: {\n      statement: '',\n      answer: 'True',\n      duration: 5,\n    },\n    validationSchema: schema,\n    onSubmit: (values) => {\n      formik.resetForm();\n      handleSubmit({ ...values, type: 'TrueFalse', id: nanoid(11) });\n      handleClose();\n    },\n  });\n  return (\n    <Dialog\n      open={open}\n      onClose={() => handleClose()}\n      PaperProps={{\n        sx: { minWidth: { xs: '90%', lg: '80vw', xl: '60vw' } },\n      }}\n    >\n      <form onSubmit={formik.handleSubmit} className=\"flex flex-col w-full\">\n        <DialogTitle className=\"text-center\">New True/False Question</DialogTitle>\n        <DialogContent style={{ paddingTop: '0.5rem' }}>\n          <Stack spacing={1}>\n            <TextField\n              variant=\"outlined\"\n              onChange={formik.handleChange}\n              size=\"small\"\n              name=\"statement\"\n              label=\"Question Statement\"\n              fullWidth\n              value={formik.values.statement}\n              error={formik.touched.statement && Boolean(formik.errors.statement)}\n              helperText={formik.touched && formik.errors.statement}\n            />\n            <div className={`${formik.errors.image ? 'border-red-500' : ''} flex flex-col w-full border rounded-lg`}>\n              <img\n                className=\"self-center w-full max-w-xs\"\n                src={imgRef && (\n                  imgRef.current && (\n                    imgRef.current.files[0] && (\n                      URL.createObjectURL(imgRef.current.files[0])\n                    )\n                  )\n                )}\n                alt=\"preview\"\n              />\n              <input\n                type=\"file\"\n                accept=\"image/*\"\n                ref={imgRef}\n                onChange={({ target }) => formik.setFieldValue('image', target.files[0])}\n              />\n              {formik.errors.image && <small className=\"text-red-500\">{formik.errors.image}</small>}\n            </div>\n            <div className=\"flex flex-col items-center gap-3 md:flex-row\">\n              <div className=\"flex items-stretch w-full gap-1 md:w-auto\">\n                <Typography variant=\"h6\">Answer:</Typography>\n                <Select\n                  variant=\"outlined\"\n                  className=\"self-center flex-grow md:flex-grow-0\"\n                  onChange={formik.handleChange}\n                  size=\"small\"\n                  name=\"answer\"\n                  value={formik.values.answer}\n                  error={formik.touched.answer && formik.errors.answer}\n                >\n                  <MenuItem value=\"True\">True</MenuItem>\n                  <MenuItem value=\"False\">False</MenuItem>\n                </Select>\n              </div>\n              <span className=\"flex-grow hidden md:block\" />\n              <div className=\"flex flex-col gap-3 md:flex-row\">\n                <div className=\"flex items-center gap-1\">\n                  <Typography variant=\"h6\">Duration:</Typography>\n                  <TextField\n                    variant=\"outlined\"\n                    size=\"small\"\n                    type=\"number\"\n                    InputProps={{\n                      endAdornment: 'Seconds',\n                    }}\n                    name=\"duration\"\n                    onChange={formik.handleChange}\n                    value={formik.values.duration}\n                    error={formik.touched.duration && formik.errors.duration}\n                    helperText={formik.touched.duration && formik.errors.duration}\n                  />\n                </div>\n                <Button variant=\"contained\" color=\"error\" className=\"md:self-center\" startIcon={<Close />} onClick={() => { formik.resetForm(); handleClose(); }}>Cancel</Button>\n                <Button variant=\"contained\" type=\"submit\" className=\"md:self-center\" startIcon={<Add />}>Add</Button>\n              </div>\n            </div>\n          </Stack>\n        </DialogContent>\n      </form>\n    </Dialog>\n  );\n}\n\nNewTrueFalseDialog.propTypes = {\n  open: PropTypes.bool.isRequired,\n  handleClose: PropTypes.func.isRequired,\n  handleSubmit: PropTypes.func.isRequired,\n};\n","/* eslint-disable react/forbid-prop-types */\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nimport {\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  Stack,\n  TextField,\n  Typography,\n  Select,\n  MenuItem,\n  Button,\n} from '@mui/material';\n\nimport {\n  Close, Edit,\n} from '@mui/icons-material';\n\nimport { useFormik } from 'formik';\nimport * as yup from 'yup';\n\nexport default function UpdateMCQSDialog({\n  question, open, handleClose, handleSubmit,\n}) {\n  const imgRef = React.useRef();\n  const schema = yup.object({\n    statement: yup.string().required('Question Statement is required').min(3, 'Enter at least 3 characters'),\n    image: yup.mixed().test('fileSize', 'File should not be larger than 30kB', (value) => {\n      if (!value) return true;\n      return value.size <= 30000;\n    }),\n    A: yup.string().required('Option A is required'),\n    B: yup.string().required('Option B is required'),\n    C: yup.string().required('Option C is required'),\n    D: yup.string().required('Option D is required'),\n    answer: yup.string().required('Correct Option is required'),\n    duration: yup.number().required('Duration is required').min(5, 'At least 5 seconds should be given').max(180, 'At most 3 minutes (180s) should be given'),\n  });\n  const formik = useFormik({\n    initialValues: {\n      ...question,\n    },\n    validationSchema: schema,\n    onSubmit: (values) => {\n      formik.resetForm();\n      handleSubmit({ ...values, id: question.id });\n      handleClose();\n    },\n  });\n  // Rest form when component is unmount\n  React.useEffect(() => formik.resetForm(), []);\n  return (\n    <Dialog\n      open={open}\n      onClose={() => handleClose()}\n      PaperProps={{\n        sx: { minWidth: { xs: '90%', lg: '80vw', xl: '60vw' } },\n      }}\n    >\n      <form onSubmit={formik.handleSubmit} className=\"flex flex-col w-full\">\n        <DialogTitle className=\"text-center\">New MCQS Question</DialogTitle>\n        <DialogContent style={{ paddingTop: '0.5rem' }}>\n          <Stack spacing={1}>\n            <TextField\n              variant=\"outlined\"\n              onChange={formik.handleChange}\n              size=\"small\"\n              name=\"statement\"\n              label=\"Question Statement\"\n              fullWidth\n              value={formik.values.statement}\n              error={formik.touched.statement && formik.errors.statement}\n              helperText={formik.touched && formik.errors.statement}\n            />\n            <div className={`${formik.errors.image ? 'border-red-500' : ''} flex flex-col w-full border rounded-lg`}>\n              <img\n                className=\"w-full\"\n                src={(\n                  imgRef && (\n                    imgRef.current && (\n                      imgRef.current.files[0] && (\n                        URL.createObjectURL(imgRef.current.files[0])\n                      )\n                    )\n                  )\n                ) || (typeof question.image === 'object' ? URL.createObjectURL(question.image) : question.image)}\n                alt=\"preview\"\n              />\n              <input\n                type=\"file\"\n                accept=\"image/*\"\n                ref={imgRef}\n                onChange={({ target }) => formik.setFieldValue('image', target.files[0])}\n              />\n              {formik.errors.image && <small className=\"text-red-500\">{formik.errors.image}</small>}\n            </div>\n            <div className=\"flex items-center gap-3\">\n              <Typography variant=\"h6\">A.</Typography>\n              <TextField\n                variant=\"outlined\"\n                onChange={formik.handleChange}\n                size=\"small\"\n                name=\"A\"\n                className=\"flex-grow\"\n                value={formik.values.A}\n                error={formik.touched.A && formik.errors.A}\n                helperText={formik.touched.A && formik.errors.A}\n              />\n            </div>\n            <div className=\"flex items-center gap-3\">\n              <Typography variant=\"h6\">B.</Typography>\n              <TextField\n                variant=\"outlined\"\n                onChange={formik.handleChange}\n                size=\"small\"\n                name=\"B\"\n                className=\"flex-grow\"\n                value={formik.values.B}\n                error={formik.touched.B && formik.errors.B}\n                helperText={formik.touched.B && formik.errors.B}\n              />\n            </div>\n            <div className=\"flex items-center gap-3\">\n              <Typography variant=\"h6\">C.</Typography>\n              <TextField\n                variant=\"outlined\"\n                onChange={formik.handleChange}\n                size=\"small\"\n                name=\"C\"\n                className=\"flex-grow\"\n                value={formik.values.C}\n                error={formik.touched.C && formik.errors.C}\n                helperText={formik.touched.C && formik.errors.C}\n              />\n            </div>\n            <div className=\"flex items-center gap-3\">\n              <Typography variant=\"h6\">D.</Typography>\n              <TextField\n                variant=\"outlined\"\n                onChange={formik.handleChange}\n                size=\"small\"\n                name=\"D\"\n                className=\"flex-grow\"\n                value={formik.values.D}\n                error={formik.touched.D && formik.errors.D}\n                helperText={formik.touched.D && formik.errors.D}\n              />\n            </div>\n            <div className=\"flex flex-col items-center gap-3 md:flex-row\">\n              <div className=\"flex items-stretch w-full gap-1 md:w-auto\">\n                <Typography variant=\"h6\">Correct Option:</Typography>\n                <Select\n                  variant=\"outlined\"\n                  className=\"self-center flex-grow md:flex-grow-0\"\n                  onChange={formik.handleChange}\n                  size=\"small\"\n                  name=\"answer\"\n                  value={formik.values.answer}\n                  error={formik.touched.answer && formik.errors.answer}\n                >\n                  <MenuItem value=\"A\">A</MenuItem>\n                  <MenuItem value=\"B\">B</MenuItem>\n                  <MenuItem value=\"C\">C</MenuItem>\n                  <MenuItem value=\"D\">D</MenuItem>\n                </Select>\n              </div>\n              <span className=\"flex-grow hidden md:block\" />\n              <div className=\"flex flex-col gap-3 md:flex-row\">\n                <div className=\"flex items-center gap-1\">\n                  <Typography variant=\"h6\">Duration:</Typography>\n                  <TextField\n                    variant=\"outlined\"\n                    size=\"small\"\n                    type=\"number\"\n                    InputProps={{\n                      endAdornment: 'Seconds',\n                    }}\n                    name=\"duration\"\n                    onChange={formik.handleChange}\n                    value={formik.values.duration}\n                    error={formik.touched.duration && formik.errors.duration}\n                    helperText={formik.touched.duration && formik.errors.duration}\n                  />\n                </div>\n                <Button variant=\"contained\" color=\"error\" className=\"md:self-center\" startIcon={<Close />} onClick={() => { formik.resetForm(); handleClose(); }}>Cancel</Button>\n                <Button variant=\"contained\" type=\"submit\" className=\"md:self-center\" startIcon={<Edit />}>Update</Button>\n              </div>\n            </div>\n          </Stack>\n        </DialogContent>\n      </form>\n    </Dialog>\n  );\n}\n\nUpdateMCQSDialog.propTypes = {\n  question: PropTypes.object.isRequired,\n  open: PropTypes.bool.isRequired,\n  handleClose: PropTypes.func.isRequired,\n  handleSubmit: PropTypes.func.isRequired,\n};\n","/* eslint-disable react/forbid-prop-types */\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nimport {\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  Stack,\n  TextField,\n  Button,\n  Typography,\n} from '@mui/material';\n\nimport {\n  Close, Edit,\n} from '@mui/icons-material';\n\nimport { useFormik } from 'formik';\nimport * as yup from 'yup';\n\nexport default function UpdateBlankDialog({\n  open, handleClose, handleSubmit, question,\n}) {\n  const imgRef = React.useRef();\n  const schema = yup.object({\n    statement: yup.string().required('Question Statement is required').min(3, 'Enter at least 3 characters'),\n    image: yup.mixed().test('fileSize', 'File should not be larger than 30kB', (value) => {\n      if (!value) return true;\n      return value.size <= 30000;\n    }),\n    answer: yup.string().required('Answer is required'),\n    duration: yup.number().required('Duration is required').min(5, 'At least 5 seconds should be given').max(180, 'At most 3 minutes (180s) should be given'),\n  });\n  const formik = useFormik({\n    initialValues: {\n      ...question,\n    },\n    validationSchema: schema,\n    onSubmit: (values) => {\n      formik.resetForm();\n      handleSubmit({ ...values });\n      handleClose();\n    },\n  });\n  return (\n    <Dialog\n      open={open}\n      onClose={() => handleClose()}\n      PaperProps={{\n        sx: { minWidth: { xs: '90%', lg: '80vw', xl: '60vw' } },\n      }}\n    >\n      <form onSubmit={formik.handleSubmit} className=\"flex flex-col w-full\">\n        <DialogTitle className=\"text-center\">Update Blank Question</DialogTitle>\n        <DialogContent style={{ paddingTop: '0.5rem' }}>\n          <Stack spacing={1}>\n            <TextField\n              variant=\"outlined\"\n              onChange={formik.handleChange}\n              size=\"small\"\n              name=\"statement\"\n              label=\"Question Statement\"\n              fullWidth\n              value={formik.values.statement}\n              error={formik.touched.statement && Boolean(formik.errors.statement)}\n              helperText={formik.touched && formik.errors.statement}\n            />\n            <div className={`${formik.errors.image ? 'border-red-500' : ''} flex flex-col w-full border rounded-lg`}>\n              <img\n                className=\"self-center w-full max-w-xs\"\n                src={(imgRef && (\n                  imgRef.current && (\n                    imgRef.current.files[0] && (\n                      URL.createObjectURL(imgRef.current.files[0])\n                    )\n                  )\n                )) || (typeof question.image === 'object' ? URL.createObjectURL(question.image) : question.image)}\n                alt=\"preview\"\n              />\n              <input\n                type=\"file\"\n                accept=\"image/*\"\n                ref={imgRef}\n                onChange={({ target }) => formik.setFieldValue('image', target.files[0])}\n              />\n              {formik.errors.image && <small className=\"text-red-500\">{formik.errors.image}</small>}\n            </div>\n            <TextField\n              variant=\"outlined\"\n              onChange={formik.handleChange}\n              size=\"small\"\n              name=\"answer\"\n              label=\"Answer\"\n              value={formik.values.answer}\n              error={formik.touched.answer && Boolean(formik.errors.answer)}\n              helperText={formik.touched && formik.errors.answer}\n            />\n            <div className=\"flex flex-col gap-3 md:flex-row\">\n              <div className=\"flex items-center gap-1\">\n                <Typography variant=\"h6\">Duration:</Typography>\n                <TextField\n                  variant=\"outlined\"\n                  size=\"small\"\n                  type=\"number\"\n                  InputProps={{\n                    endAdornment: 'Seconds',\n                  }}\n                  name=\"duration\"\n                  onChange={formik.handleChange}\n                  value={formik.values.duration}\n                  error={formik.touched.duration && Boolean(formik.errors.duration)}\n                  helperText={formik.touched.duration && formik.errors.duration}\n                />\n              </div>\n              <div className=\"flex-grow\" />\n              <Button variant=\"contained\" color=\"error\" className=\"md:self-center\" startIcon={<Close />} onClick={() => { formik.resetForm(); handleClose(); }}>Cancel</Button>\n              <Button variant=\"contained\" type=\"submit\" className=\"md:self-center\" startIcon={<Edit />}>Update</Button>\n            </div>\n          </Stack>\n        </DialogContent>\n      </form>\n    </Dialog>\n  );\n}\n\nUpdateBlankDialog.propTypes = {\n  question: PropTypes.object.isRequired,\n  open: PropTypes.bool.isRequired,\n  handleClose: PropTypes.func.isRequired,\n  handleSubmit: PropTypes.func.isRequired,\n};\n","/* eslint-disable react/forbid-prop-types */\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nimport {\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  Stack,\n  TextField,\n  Button,\n  Typography,\n  Select,\n  MenuItem,\n} from '@mui/material';\n\nimport {\n  Close, Edit,\n} from '@mui/icons-material';\n\nimport { useFormik } from 'formik';\nimport * as yup from 'yup';\n\nexport default function NewTrueFalseDialog({\n  open, handleClose, handleSubmit, question,\n}) {\n  const imgRef = React.useRef();\n  const schema = yup.object({\n    statement: yup.string().required('Question Statement is required').min(3, 'Enter at least 3 characters'),\n    image: yup.mixed().test('fileSize', 'File should not be larger than 30kB', (value) => {\n      if (!value) return true;\n      return value.size <= 30000;\n    }),\n    answer: yup.string().required('Answer is required'),\n    duration: yup.number().required('Duration is required').min(5, 'At least 5 seconds should be given').max(180, 'At most 3 minutes (180s) should be given'),\n  });\n  const formik = useFormik({\n    initialValues: {\n      ...question,\n    },\n    validationSchema: schema,\n    onSubmit: (values) => {\n      formik.resetForm();\n      handleSubmit({ ...values });\n      handleClose();\n    },\n  });\n  return (\n    <Dialog\n      open={open}\n      onClose={() => handleClose()}\n      PaperProps={{\n        sx: { minWidth: { xs: '90%', lg: '80vw', xl: '60vw' } },\n      }}\n    >\n      <form onSubmit={formik.handleSubmit} className=\"flex flex-col w-full\">\n        <DialogTitle className=\"text-center\">New True/False Question</DialogTitle>\n        <DialogContent style={{ paddingTop: '0.5rem' }}>\n          <Stack spacing={1}>\n            <TextField\n              variant=\"outlined\"\n              onChange={formik.handleChange}\n              size=\"small\"\n              name=\"statement\"\n              label=\"Question Statement\"\n              fullWidth\n              value={formik.values.statement}\n              error={formik.touched.statement && Boolean(formik.errors.statement)}\n              helperText={formik.touched && formik.errors.statement}\n            />\n            <div className={`${formik.errors.image ? 'border-red-500' : ''} flex flex-col w-full border rounded-lg`}>\n              <img\n                className=\"self-center w-full max-w-xs\"\n                src={(imgRef && (\n                  imgRef.current && (\n                    imgRef.current.files[0] && (\n                      URL.createObjectURL(imgRef.current.files[0])\n                    )\n                  )\n                )) || (typeof question.image === 'object' ? URL.createObjectURL(question.image) : question.image)}\n                alt=\"preview\"\n              />\n              <input\n                type=\"file\"\n                accept=\"image/*\"\n                ref={imgRef}\n                onChange={({ target }) => formik.setFieldValue('image', target.files[0])}\n              />\n              {formik.errors.image && <small className=\"text-red-500\">{formik.errors.image}</small>}\n            </div>\n            <div className=\"flex flex-col items-center gap-3 md:flex-row\">\n              <div className=\"flex items-stretch w-full gap-1 md:w-auto\">\n                <Typography variant=\"h6\">Answer:</Typography>\n                <Select\n                  variant=\"outlined\"\n                  className=\"self-center flex-grow md:flex-grow-0\"\n                  onChange={formik.handleChange}\n                  size=\"small\"\n                  name=\"answer\"\n                  value={formik.values.answer}\n                  error={formik.touched.answer && formik.errors.answer}\n                >\n                  <MenuItem value=\"True\">True</MenuItem>\n                  <MenuItem value=\"False\">False</MenuItem>\n                </Select>\n              </div>\n              <span className=\"flex-grow hidden md:block\" />\n              <div className=\"flex flex-col gap-3 md:flex-row\">\n                <div className=\"flex items-center gap-1\">\n                  <Typography variant=\"h6\">Duration:</Typography>\n                  <TextField\n                    variant=\"outlined\"\n                    size=\"small\"\n                    type=\"number\"\n                    InputProps={{\n                      endAdornment: 'Seconds',\n                    }}\n                    name=\"duration\"\n                    onChange={formik.handleChange}\n                    value={formik.values.duration}\n                    error={formik.touched.duration && formik.errors.duration}\n                    helperText={formik.touched.duration && formik.errors.duration}\n                  />\n                </div>\n                <Button variant=\"contained\" color=\"error\" className=\"md:self-center\" startIcon={<Close />} onClick={() => { formik.resetForm(); handleClose(); }}>Cancel</Button>\n                <Button variant=\"contained\" type=\"submit\" className=\"md:self-center\" startIcon={<Edit />}>Update</Button>\n              </div>\n            </div>\n          </Stack>\n        </DialogContent>\n      </form>\n    </Dialog>\n  );\n}\n\nNewTrueFalseDialog.propTypes = {\n  question: PropTypes.object.isRequired,\n  open: PropTypes.bool.isRequired,\n  handleClose: PropTypes.func.isRequired,\n  handleSubmit: PropTypes.func.isRequired,\n};\n","/* eslint-disable react/jsx-props-no-spreading */\nimport React from 'react';\n\nimport {\n  Typography,\n  TextField,\n  Select,\n  MenuItem,\n  Button,\n  Menu,\n  Stack,\n  Card,\n  IconButton,\n  CircularProgress,\n} from '@mui/material';\n\nimport { Add, Delete, Edit } from '@mui/icons-material';\n\nimport date from 'date-and-time';\n\nimport { useNavigate } from 'react-router-dom';\n\nimport { useFormik } from 'formik';\nimport * as yup from 'yup';\n\nimport { useDispatch } from 'react-redux';\n\nimport { useMutation } from 'react-query';\nimport { addErrorToast, addSuccessToast } from '../../../redux/actions/toasts';\nimport { newTest } from '../../../api/admin';\n\nimport {\n  NewMCQSDialog,\n  NewBlankDialog,\n  NewTrueFalseDialog,\n  UpdateMCQSDialog,\n  UpdateBlankDialog,\n  UpdateTrueFalseDialog,\n} from '../questionDialogs';\n\nexport default function NewTest() {\n  const [anchorEl, setAnchoEl] = React.useState(null);\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const open = Boolean(anchorEl);\n  function handleMenuOpen(e) {\n    setAnchoEl(e.currentTarget);\n  }\n  function handleMenuClose() {\n    setAnchoEl(null);\n  }\n  const { isLoading, mutate } = useMutation((values) => newTest(values), {\n    onSuccess: () => {\n      dispatch(addSuccessToast({ message: 'Test created successfully' }));\n      navigate('../../tests');\n    },\n    onError: (err) =>\n      dispatch(addErrorToast({ message: err?.response?.data.error || err.message })),\n  });\n  const schema = yup.object({\n    title: yup.string().required('Title is required').min(4, 'Enter at least 4 characters'),\n    subject: yup.string().required('Subject is required'),\n    startsAt: yup.date().min(new Date(), 'Test cannot be hold in past time'),\n    submittableBefore: yup\n      .date()\n      .min(new Date(), 'Test cannot be uploaded after end time')\n      .required('End time is required'),\n    isDemo: yup.string(),\n    questions: yup.array().min(3, 'The test should have at least 3 questions'),\n  });\n  const formik = useFormik({\n    initialValues: {\n      title: '',\n      subject: 'English',\n      startsAt: new Date(),\n      submittableBefore: new Date(),\n      isDemo: false,\n      questions: [],\n    },\n    validationSchema: schema,\n    onSubmit: (values) => mutate(values),\n  });\n  const [toBeUpdatedQuestion, setToBeUpdatedQuestion] = React.useState(null);\n  const [isOpenMCQS, setOpenMCQS] = React.useState(false);\n  const [isOpenBlank, setOpenBlank] = React.useState(false);\n  const [isOpenTrueFalse, setOpenTrueFalse] = React.useState(false);\n  const [isOpenUpdateMCQS, setOpenUpdateMCQS] = React.useState(false);\n  const [isOpenUpdateBlank, setOpenUpdateBlank] = React.useState(false);\n  const [isOpenUpdateTrueFalse, setOpenUpdateTrueFalse] = React.useState(false);\n  function openDialog(dialog) {\n    if (dialog === 'MCQS') {\n      setOpenMCQS(true);\n      setAnchoEl(null);\n    } else if (dialog === 'Blank') {\n      setOpenBlank(true);\n      setAnchoEl(null);\n    } else if (dialog === 'TrueFalse') {\n      setOpenTrueFalse(true);\n      setAnchoEl(null);\n    }\n  }\n  function openUpdateDialog(dialogType) {\n    if (dialogType === 'MCQS') {\n      setOpenUpdateMCQS(true);\n    } else if (dialogType === 'Blank') {\n      setOpenUpdateBlank(true);\n    } else if (dialogType === 'TrueFalse') {\n      setOpenUpdateTrueFalse(true);\n    }\n  }\n  function updateQuestion(question) {\n    const foundIndex = formik.values.questions.findIndex((q) => q.id === question.id);\n    const updatedQuestions = [\n      ...formik.values.questions.slice(0, foundIndex),\n      { ...question },\n      ...formik.values.questions.slice(foundIndex + 1),\n    ];\n    formik.setFieldValue('questions', updatedQuestions);\n  }\n  function deleteQuestion(id) {\n    const removed = formik.values.questions.filter((q) => q.id !== id);\n    formik.setFieldValue('questions', removed);\n  }\n  function calculateTotalDuration(questions) {\n    if (questions.length === 0) return '0 s';\n    let totalSeconds = 0;\n    questions.forEach((q) => {\n      totalSeconds += q.duration;\n    });\n    const minutes = Math.floor(totalSeconds / 60);\n    const seconds = totalSeconds % 60;\n    if (minutes === 0) return `${seconds} s`;\n    return `${minutes} m, ${seconds} s`;\n  }\n  return (\n    <form onSubmit={formik.handleSubmit} className=\"flex flex-col w-full h-full gap-6\">\n      <div className=\"flex justify-between w-full gap-3 lg:w-11/12\">\n        <Typography variant=\"h6\" align=\"center\">\n          New Test\n        </Typography>\n        <div className=\"flex items-center justify-center\">\n          <Button disabled={isLoading} variant=\"contained\" type=\"submit\">\n            {isLoading ? <CircularProgress /> : 'Upload'}\n          </Button>\n        </div>\n      </div>\n      <table>\n        <tbody>\n          <tr className=\"flex flex-col justify-between w-full lg:w-2/3 2xl:w-2/6 md:flex-row\">\n            <td className=\"min-w-fit\">\n              <Typography variant=\"h6\" color=\"primary\">\n                Title\n              </Typography>\n            </td>\n            <td>\n              <TextField\n                variant=\"outlined\"\n                placeholder=\"Title\"\n                size=\"small\"\n                className=\"w-full sm:w-60\"\n                name=\"title\"\n                onChange={formik.handleChange}\n                value={formik.values.title}\n                error={formik.touched.title && formik.errors.title}\n                helperText={formik.touched && formik.errors.title}\n              />\n            </td>\n          </tr>\n          <tr className=\"flex flex-col justify-between w-full lg:w-2/3 2xl:w-2/6 md:flex-row\">\n            <td className=\"min-w-fit\">\n              <Typography variant=\"h6\" color=\"primary\">\n                Subject\n              </Typography>\n            </td>\n            <td>\n              <Select\n                variant=\"outlined\"\n                placeholder=\"Subject\"\n                size=\"small\"\n                className=\"w-full sm:w-60\"\n                name=\"subject\"\n                onChange={formik.handleChange}\n                value={formik.values.subject}\n                error={formik.touched.subject && formik.errors.subject}\n                helperText={formik.touched && formik.errors.subject}\n              >\n                <MenuItem value=\"English\">English</MenuItem>\n                <MenuItem value=\"Math\">Math</MenuItem>\n                <MenuItem value=\"Physics\">Physics</MenuItem>\n                <MenuItem value=\"Chemistry\">Chemistry</MenuItem>\n                <MenuItem value=\"Biology\">Biology</MenuItem>\n              </Select>\n            </td>\n          </tr>\n          <tr className=\"flex flex-col justify-between w-full lg:w-2/3 2xl:w-2/6 md:flex-row\">\n            <td className=\"min-w-fit\">\n              <Typography variant=\"h6\" color=\"primary\">\n                Starts at\n              </Typography>\n            </td>\n            <td>\n              <TextField\n                type=\"datetime-local\"\n                variant=\"outlined\"\n                placeholder=\"Title\"\n                size=\"small\"\n                className=\"w-full sm:w-60\"\n                name=\"startsAt\"\n                onChange={formik.handleChange}\n                value={date.format(new Date(formik.values.startsAt), 'YYYY-MM-DDThh:mm')}\n                error={formik.touched.startsAt && formik.errors.startsAt}\n                helperText={formik.touched && formik.errors.startsAt}\n              />\n            </td>\n          </tr>\n          <tr className=\"flex flex-col justify-between w-full lg:w-2/3 2xl:w-2/6 md:flex-row\">\n            <td className=\"min-w-fit\">\n              <Typography variant=\"h6\" color=\"primary\">\n                Submittable Before\n              </Typography>\n            </td>\n            <td>\n              <TextField\n                type=\"datetime-local\"\n                variant=\"outlined\"\n                placeholder=\"Title\"\n                size=\"small\"\n                className=\"w-full sm:w-60\"\n                name=\"submittableBefore\"\n                onChange={formik.handleChange}\n                value={date.format(new Date(formik.values.submittableBefore), 'YYYY-MM-DDThh:mm')}\n                error={formik.touched.submittableBefore && formik.errors.submittableBefore}\n                helperText={formik.touched && formik.errors.submittableBefore}\n              />\n            </td>\n          </tr>\n          <tr className=\"flex flex-col justify-between w-full lg:w-2/3 2xl:w-2/6 md:flex-row\">\n            <td className=\"min-w-fit\">\n              <Typography variant=\"h6\" color=\"primary\">\n                Is demo:\n              </Typography>\n            </td>\n            <td className=\"flex justify-start w-full sm:w-60\">\n              <Select\n                size=\"small\"\n                className=\"w-full\"\n                name=\"isDemo\"\n                onChange={formik.handleChange}\n                value={formik.values.isDemo}\n                error={formik.touched.isDemo && formik.errors.isDemo}\n                helperText={formik.touched && formik.errors.isDemo}\n              >\n                <MenuItem value=\"true\">Yes</MenuItem>\n                <MenuItem value=\"false\">No</MenuItem>\n              </Select>\n            </td>\n          </tr>\n          <tr className=\"flex flex-col justify-between w-full lg:w-2/3 2xl:w-2/6 md:flex-row\">\n            <td>\n              <Typography variant=\"h6\" color=\"primary\">\n                Duration:\n              </Typography>\n            </td>\n            <td>\n              <Typography variant=\"h6\">\n                {calculateTotalDuration(formik.values.questions)}\n              </Typography>\n            </td>\n          </tr>\n        </tbody>\n      </table>\n      <NewMCQSDialog\n        open={isOpenMCQS}\n        handleClose={() => setOpenMCQS(false)}\n        handleSubmit={(q) => formik.setFieldValue('questions', [...formik.values.questions, q])}\n      />\n      {toBeUpdatedQuestion && (\n        <UpdateMCQSDialog\n          question={toBeUpdatedQuestion}\n          open={isOpenUpdateMCQS}\n          handleClose={() => {\n            setOpenUpdateMCQS(false);\n            setToBeUpdatedQuestion(null);\n          }}\n          handleSubmit={(q) => updateQuestion(q)}\n        />\n      )}\n      <NewBlankDialog\n        open={isOpenBlank}\n        handleClose={() => setOpenBlank(false)}\n        handleSubmit={(q) => formik.setFieldValue('questions', [...formik.values.questions, q])}\n      />\n      {toBeUpdatedQuestion && (\n        <UpdateBlankDialog\n          question={toBeUpdatedQuestion}\n          open={isOpenUpdateBlank}\n          handleClose={() => {\n            setOpenUpdateBlank(false);\n            setToBeUpdatedQuestion(null);\n          }}\n          handleSubmit={(q) => updateQuestion(q)}\n        />\n      )}\n      <NewTrueFalseDialog\n        open={isOpenTrueFalse}\n        handleClose={() => setOpenTrueFalse(false)}\n        handleSubmit={(q) => formik.setFieldValue('questions', [...formik.values.questions, q])}\n      />\n      {toBeUpdatedQuestion && (\n        <UpdateTrueFalseDialog\n          question={toBeUpdatedQuestion}\n          open={isOpenUpdateTrueFalse}\n          handleClose={() => {\n            setOpenUpdateTrueFalse(false);\n            setToBeUpdatedQuestion(null);\n          }}\n          handleSubmit={(q) => updateQuestion(q)}\n        />\n      )}\n      <div\n        className={`flex flex-col gap-3 p-3 lg:w-11/12 border rounded-xl ${\n          formik.touched.questions && formik.errors.questions && 'border-red-500'\n        }`}\n      >\n        <div className=\"flex items-center justify-between\">\n          <Typography variant=\"h6\" color=\"primary\">\n            Questions\n          </Typography>\n          <Button\n            variant=\"contained\"\n            startIcon={<Add />}\n            className=\"self-end\"\n            onClick={(e) => handleMenuOpen(e)}\n          >\n            New Question\n          </Button>\n          <Menu\n            open={open}\n            onClose={() => handleMenuClose()}\n            anchorEl={anchorEl}\n            anchorOrigin={{\n              vertical: 'bottom',\n              horizontal: 'right',\n            }}\n            transformOrigin={{\n              vertical: 'top',\n              horizontal: 'right',\n            }}\n          >\n            <MenuItem disableRipple onClick={() => openDialog('MCQS')}>\n              MCQS\n            </MenuItem>\n            <MenuItem disableRipple onClick={() => openDialog('Blank')}>\n              Blank\n            </MenuItem>\n            <MenuItem disableRipple onClick={() => openDialog('TrueFalse')}>\n              True/False\n            </MenuItem>\n          </Menu>\n        </div>\n        {formik.values.questions.map((q, index) => (\n          <Stack component={Card} key={q.id} className=\"p-3 overflow-auto\">\n            <Typography variant=\"body1\">\n              {index + 1}\n              )&nbsp;\n              {q.statement}\n            </Typography>\n            {q.image && (\n              <img\n                src={URL.createObjectURL(q.image)}\n                alt=\"preview\"\n                className=\"self-center w-full max-w-xs\"\n              />\n            )}\n            {q.type === 'MCQS' && (\n              <>\n                <Typography variant=\"body2\">\n                  A:&nbsp;\n                  {q.A}\n                </Typography>\n                <Typography variant=\"body2\">\n                  B:&nbsp;\n                  {q.B}\n                </Typography>\n                <Typography variant=\"body2\">\n                  C:&nbsp;\n                  {q.C}\n                </Typography>\n                <Typography variant=\"body2\">\n                  D:&nbsp;\n                  {q.D}\n                </Typography>\n              </>\n            )}\n            <div className=\"flex flex-col items-center justify-between gap-3 sm:flex-row\">\n              <Typography variant=\"body1\">\n                Answer:&nbsp;\n                {q.answer}\n              </Typography>\n              <Typography variant=\"body1\">\n                Duration:&nbsp;\n                {q.duration}\n                &nbsp;seconds\n              </Typography>\n              <div className=\"flex items-center gap-3\">\n                <IconButton variant=\"contained\" color=\"error\" onClick={() => deleteQuestion(q.id)}>\n                  <Delete />\n                </IconButton>\n                <IconButton\n                  variant=\"contained\"\n                  color=\"primary\"\n                  onClick={() => {\n                    setToBeUpdatedQuestion(() => q);\n                    openUpdateDialog(q.type);\n                  }}\n                >\n                  <Edit />\n                </IconButton>\n              </div>\n            </div>\n          </Stack>\n        ))}\n      </div>\n      {formik.touched.questions && formik.errors.questions && (\n        <small className=\"-mt-5 text-red-500\">{formik.errors.questions}</small>\n      )}\n    </form>\n  );\n}\n","/* eslint-disable no-unused-vars */\n/* eslint-disable react/forbid-prop-types */\n/* eslint-disable react/jsx-props-no-spreading */\nimport React from 'react';\n\nimport {\n  Typography,\n  TextField,\n  Select,\n  MenuItem,\n  Button,\n  Menu,\n  Stack,\n  Card,\n  IconButton,\n  CircularProgress,\n} from '@mui/material';\n\nimport { Add, Delete, Edit } from '@mui/icons-material';\n\nimport date from 'date-and-time';\n\nimport { useParams, useNavigate } from 'react-router-dom';\n\nimport { useFormik } from 'formik';\nimport * as yup from 'yup';\n\nimport { useDispatch } from 'react-redux';\n\nimport { useQuery, useMutation } from 'react-query';\nimport { getTest, updateTest } from '../../../api/admin';\nimport { addErrorToast, addSuccessToast } from '../../../redux/actions/toasts';\n\nimport {\n  NewMCQSDialog,\n  NewBlankDialog,\n  NewTrueFalseDialog,\n  UpdateMCQSDialog,\n  UpdateBlankDialog,\n  UpdateTrueFalseDialog,\n} from '../questionDialogs';\n\nexport default function UpdateTest() {\n  const { _id } = useParams();\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const updateMutation = useMutation((values) => updateTest({ ...values, _id }), {\n    onSuccess: () => {\n      dispatch(addSuccessToast({ message: 'Test updated successfully' }));\n      navigate('../../tests');\n    },\n    onError: (err) =>\n      dispatch(addErrorToast({ message: err?.response?.data.error || err.message })),\n  });\n  const schema = yup.object({\n    title: yup.string().required('Title is required').min(4, 'Enter at least 4 characters'),\n    subject: yup.string().required('Subject is required'),\n    startsAt: yup.date().min(new Date(), 'Test cannot be hold in past time'),\n    submittableBefore: yup\n      .date()\n      .min(new Date(), 'Test cannot be uploaded after end time')\n      .required('End time is required'),\n    isDemo: yup.string(),\n    questions: yup.array().min(3, 'The test should have at least 3 questions'),\n  });\n  const formik = useFormik({\n    initialValues: {\n      title: '',\n      subject: '',\n      startsAt: new Date(),\n      submittableBefore: new Date(),\n      isDemo: 'false',\n      questions: [],\n    },\n    validationSchema: schema,\n    onSubmit: (values) => updateMutation.mutate(values),\n  });\n  const { isLoading } = useQuery(['test', _id], () => getTest(_id), {\n    onSuccess: ({ data }) => {\n      formik.setValues(data.test);\n    },\n    onError: (err) =>\n      dispatch(addErrorToast({ message: err?.response?.data.error || err.message })),\n  });\n  const [anchorEl, setAnchoEl] = React.useState(null);\n  const open = Boolean(anchorEl);\n  function handleMenuOpen(e) {\n    setAnchoEl(e.currentTarget);\n  }\n  function handleMenuClose() {\n    setAnchoEl(null);\n  }\n  const [toBeUpdatedQuestion, setToBeUpdatedQuestion] = React.useState(null);\n  const [isOpenMCQS, setOpenMCQS] = React.useState(false);\n  const [isOpenBlank, setOpenBlank] = React.useState(false);\n  const [isOpenTrueFalse, setOpenTrueFalse] = React.useState(false);\n  const [isOpenUpdateMCQS, setOpenUpdateMCQS] = React.useState(false);\n  const [isOpenUpdateBlank, setOpenUpdateBlank] = React.useState(false);\n  const [isOpenUpdateTrueFalse, setOpenUpdateTrueFalse] = React.useState(false);\n  function openDialog(dialog) {\n    if (dialog === 'MCQS') {\n      setOpenMCQS(true);\n      setAnchoEl(null);\n    } else if (dialog === 'Blank') {\n      setOpenBlank(true);\n      setAnchoEl(null);\n    } else if (dialog === 'TrueFalse') {\n      setOpenTrueFalse(true);\n      setAnchoEl(null);\n    }\n  }\n  function openUpdateDialog(dialogType) {\n    if (dialogType === 'MCQS') {\n      setOpenUpdateMCQS(true);\n    } else if (dialogType === 'Blank') {\n      setOpenUpdateBlank(true);\n    } else if (dialogType === 'TrueFalse') {\n      setOpenUpdateTrueFalse(true);\n    }\n  }\n  function updateQuestion(question) {\n    const foundIndex = formik.values.questions.findIndex((q) => q.id === question.id);\n    const updatedQuestions = [\n      ...formik.values.questions.slice(0, foundIndex),\n      { ...question },\n      ...formik.values.questions.slice(foundIndex + 1),\n    ];\n    formik.setFieldValue('questions', updatedQuestions);\n  }\n  function deleteQuestion(id) {\n    const removed = formik.values.questions.filter((q) => q.id !== id);\n    formik.setFieldValue('questions', removed);\n  }\n  function calculateTotalDuration(questions) {\n    if (questions.length === 0) return '0 s';\n    let totalSeconds = 0;\n    questions.forEach((q) => {\n      totalSeconds += q.duration;\n    });\n    const minutes = Math.floor(totalSeconds / 60);\n    const seconds = totalSeconds % 60;\n    if (minutes === 0) return `${seconds} s`;\n    return `${minutes} m, ${seconds} s`;\n  }\n  if (isLoading)\n    return (\n      <div className=\"relative inset-0 flex items-center justify-center w-full h-full\">\n        <CircularProgress />\n      </div>\n    );\n  return (\n    <form onSubmit={formik.handleSubmit} className=\"flex flex-col w-full h-full gap-6\">\n      <div className=\"flex justify-between w-full gap-3 lg:w-11/12\">\n        <Typography variant=\"h6\" align=\"center\">\n          Update Test\n        </Typography>\n        <div className=\"flex items-center justify-center\">\n          <Button disabled={updateMutation.isLoading} variant=\"contained\" type=\"submit\">\n            {updateMutation.isLoading ? <CircularProgress /> : 'Update'}\n          </Button>\n        </div>\n      </div>\n      <table>\n        <tbody>\n          <tr className=\"flex flex-col justify-between w-full lg:w-2/3 2xl:w-2/6 md:flex-row\">\n            <td className=\"w-min-fit\">\n              <Typography variant=\"h6\" color=\"primary\">\n                Title\n              </Typography>\n            </td>\n            <td>\n              <TextField\n                variant=\"outlined\"\n                placeholder=\"Title\"\n                size=\"small\"\n                className=\"w-full sm:w-60\"\n                name=\"title\"\n                onChange={formik.handleChange}\n                value={formik.values.title}\n                error={formik.touched.title && formik.errors.title}\n                helperText={formik.touched && formik.errors.title}\n              />\n            </td>\n          </tr>\n          <tr className=\"flex flex-col justify-between w-full lg:w-2/3 2xl:w-2/6 md:flex-row\">\n            <td className=\"w-min-fit\">\n              <Typography variant=\"h6\" color=\"primary\">\n                Subject\n              </Typography>\n            </td>\n            <td>\n              <Select\n                variant=\"outlined\"\n                placeholder=\"Subject\"\n                size=\"small\"\n                className=\"w-full sm:w-60\"\n                name=\"subject\"\n                onChange={formik.handleChange}\n                value={formik.values.subject}\n                error={formik.touched.subject && formik.errors.subject}\n                helperText={formik.touched && formik.errors.subject}\n              >\n                <MenuItem value=\"English\">English</MenuItem>\n                <MenuItem value=\"Math\">Math</MenuItem>\n                <MenuItem value=\"Physics\">Physics</MenuItem>\n                <MenuItem value=\"Chemistry\">Chemistry</MenuItem>\n                <MenuItem value=\"Biology\">Biology</MenuItem>\n              </Select>\n            </td>\n          </tr>\n          <tr className=\"flex flex-col justify-between w-full lg:w-2/3 2xl:w-2/6 md:flex-row\">\n            <td className=\"w-min-fit\">\n              <Typography variant=\"h6\" color=\"primary\">\n                Starts at\n              </Typography>\n            </td>\n            <td>\n              <TextField\n                type=\"datetime-local\"\n                variant=\"outlined\"\n                placeholder=\"Title\"\n                size=\"small\"\n                className=\"w-full sm:w-60\"\n                name=\"startsAt\"\n                onChange={formik.handleChange}\n                value={date.format(new Date(formik.values.startsAt), 'YYYY-MM-DDTHH:mm')}\n                error={formik.touched.startsAt && formik.errors.startsAt}\n                helperText={formik.touched && formik.errors.startsAt}\n              />\n            </td>\n          </tr>\n          <tr className=\"flex flex-col justify-between w-full lg:w-2/3 2xl:w-2/6 md:flex-row\">\n            <td className=\"min-w-fit\">\n              <Typography variant=\"h6\" color=\"primary\">\n                Submittable Before\n              </Typography>\n            </td>\n            <td>\n              <TextField\n                type=\"datetime-local\"\n                variant=\"outlined\"\n                placeholder=\"Title\"\n                size=\"small\"\n                className=\"w-full sm:w-60\"\n                name=\"submittableBefore\"\n                onChange={formik.handleChange}\n                value={date.format(new Date(formik.values.submittableBefore), 'YYYY-MM-DDTHH:mm')}\n                error={formik.touched.submittableBefore && formik.errors.submittableBefore}\n                helperText={formik.touched && formik.errors.submittableBefore}\n              />\n            </td>\n          </tr>\n          <tr className=\"flex flex-col justify-between w-full lg:w-2/3 2xl:w-2/6 md:flex-row\">\n            <td className=\"min-w-fit\">\n              <Typography variant=\"h6\" color=\"primary\">\n                Is demo:\n              </Typography>\n            </td>\n            <td className=\"flex justify-start w-full sm:w-60\">\n              <Select\n                variant=\"outlined\"\n                placeholder=\"Subject\"\n                size=\"small\"\n                className=\"w-full sm:w-60\"\n                name=\"isDemo\"\n                onChange={formik.handleChange}\n                value={formik.values.isDemo}\n                error={formik.touched.isDemo && formik.errors.isDemo}\n                helperText={formik.touched && formik.errors.isDemo}\n              >\n                <MenuItem value=\"true\">Yes</MenuItem>\n                <MenuItem value=\"false\">No</MenuItem>\n              </Select>\n            </td>\n          </tr>\n          <tr className=\"flex flex-col justify-between w-full lg:w-2/3 2xl:w-2/6 md:flex-row\">\n            <td>\n              <Typography variant=\"h6\" color=\"primary\">\n                Duration:\n              </Typography>\n            </td>\n            <td>\n              <Typography variant=\"h6\">\n                {calculateTotalDuration(formik.values.questions)}\n              </Typography>\n            </td>\n          </tr>\n        </tbody>\n      </table>\n      <NewMCQSDialog\n        open={isOpenMCQS}\n        handleClose={() => setOpenMCQS(false)}\n        handleSubmit={(q) => formik.setFieldValue('questions', [...formik.values.questions, q])}\n      />\n      {toBeUpdatedQuestion && (\n        <UpdateMCQSDialog\n          question={toBeUpdatedQuestion}\n          open={isOpenUpdateMCQS}\n          handleClose={() => {\n            setOpenUpdateMCQS(false);\n            setToBeUpdatedQuestion(null);\n          }}\n          handleSubmit={(q) => updateQuestion(q)}\n        />\n      )}\n      <NewBlankDialog\n        open={isOpenBlank}\n        handleClose={() => setOpenBlank(false)}\n        handleSubmit={(q) => formik.setFieldValue('questions', [...formik.values.questions, q])}\n      />\n      {toBeUpdatedQuestion && (\n        <UpdateBlankDialog\n          question={toBeUpdatedQuestion}\n          open={isOpenUpdateBlank}\n          handleClose={() => {\n            setOpenUpdateBlank(false);\n            setToBeUpdatedQuestion(null);\n          }}\n          handleSubmit={(q) => updateQuestion(q)}\n        />\n      )}\n      <NewTrueFalseDialog\n        open={isOpenTrueFalse}\n        handleClose={() => setOpenTrueFalse(false)}\n        handleSubmit={(q) => formik.setFieldValue('questions', [...formik.values.questions, q])}\n      />\n      {toBeUpdatedQuestion && (\n        <UpdateTrueFalseDialog\n          question={toBeUpdatedQuestion}\n          open={isOpenUpdateTrueFalse}\n          handleClose={() => {\n            setOpenUpdateTrueFalse(false);\n            setToBeUpdatedQuestion(null);\n          }}\n          handleSubmit={(q) => updateQuestion(q)}\n        />\n      )}\n      <div\n        className={`flex flex-col gap-3 p-3 lg:w-11/12 border rounded-xl ${\n          formik.touched.questions && formik.errors.questions && 'border-red-500'\n        }`}\n      >\n        <div className=\"flex items-center justify-between\">\n          <Typography variant=\"h6\" color=\"primary\">\n            Questions\n          </Typography>\n          <Button\n            variant=\"contained\"\n            startIcon={<Add />}\n            className=\"self-end\"\n            onClick={(e) => handleMenuOpen(e)}\n          >\n            New Question\n          </Button>\n          <Menu\n            open={open}\n            onClose={() => handleMenuClose()}\n            anchorEl={anchorEl}\n            anchorOrigin={{\n              vertical: 'bottom',\n              horizontal: 'right',\n            }}\n            transformOrigin={{\n              vertical: 'top',\n              horizontal: 'right',\n            }}\n          >\n            <MenuItem disableRipple onClick={() => openDialog('MCQS')}>\n              MCQS\n            </MenuItem>\n            <MenuItem disableRipple onClick={() => openDialog('Blank')}>\n              Blank\n            </MenuItem>\n            <MenuItem disableRipple onClick={() => openDialog('TrueFalse')}>\n              True/False\n            </MenuItem>\n          </Menu>\n        </div>\n        {formik.values.questions.map((q, index) => (\n          <Stack component={Card} key={q.id} className=\"p-3 overflow-auto\">\n            <Typography variant=\"body1\">\n              {index + 1}\n              )&nbsp;\n              {q.statement}\n            </Typography>\n            {q.image && (\n              <img\n                src={typeof q.image === 'string' ? q.image : URL.createObjectURL(q.image)}\n                alt=\"preview\"\n                className=\"self-center w-full max-w-xs\"\n              />\n            )}\n            {q.type === 'MCQS' && (\n              <>\n                <Typography variant=\"body2\">\n                  A:&nbsp;\n                  {q.A}\n                </Typography>\n                <Typography variant=\"body2\">\n                  B:&nbsp;\n                  {q.B}\n                </Typography>\n                <Typography variant=\"body2\">\n                  C:&nbsp;\n                  {q.C}\n                </Typography>\n                <Typography variant=\"body2\">\n                  D:&nbsp;\n                  {q.D}\n                </Typography>\n              </>\n            )}\n            <div className=\"flex flex-col items-center justify-between gap-3 sm:flex-row\">\n              <Typography variant=\"body1\">\n                Answer:&nbsp;\n                {q.answer}\n              </Typography>\n              <Typography variant=\"body1\">\n                Duration:&nbsp;\n                {q.duration}\n                &nbsp;seconds\n              </Typography>\n              <div className=\"flex items-center gap-3\">\n                <IconButton variant=\"contained\" color=\"error\" onClick={() => deleteQuestion(q.id)}>\n                  <Delete />\n                </IconButton>\n                <IconButton\n                  variant=\"contained\"\n                  color=\"primary\"\n                  onClick={() => {\n                    setToBeUpdatedQuestion(() => q);\n                    openUpdateDialog(q.type);\n                  }}\n                >\n                  <Edit />\n                </IconButton>\n              </div>\n            </div>\n          </Stack>\n        ))}\n      </div>\n      {formik.touched.questions && formik.errors.questions && (\n        <small className=\"-mt-5 text-red-500\">{formik.errors.questions}</small>\n      )}\n    </form>\n  );\n}\n","import React from 'react';\n\nimport { Routes, Route, useParams } from 'react-router-dom';\n\nimport {\n  Card,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  Typography,\n  CircularProgress,\n} from '@mui/material';\n\nimport { useQuery } from 'react-query';\nimport { getSubmissions } from '../../api/admin';\nimport { useDispatch } from 'react-redux';\n\nimport { addErrorToast } from '../../redux/actions/toasts';\n\nexport default function Submissions() {\n  const { testId } = useParams();\n  const dispatch = useDispatch();\n  const [submissions, setSubmissions] = React.useState([]);\n  const { isLoading } = useQuery(['admin-submissions', testId], () => getSubmissions(testId), {\n    onSuccess: ({ data }) => setSubmissions(data.submissions),\n    onError: (err) =>\n      dispatch(addErrorToast({ message: err.response?.data?.error || err.message })),\n  });\n  if (isLoading)\n    return (\n      <div className=\"relative inset-0 flex items-center justify-center w-full h-full\">\n        <CircularProgress />\n      </div>\n    );\n  return (\n    <Routes>\n      <Route\n        index\n        element={\n          <div className=\"flex flex-col w-full h-full gap-6\">\n            <Typography variant=\"h6\" align=\"center\">\n              Submissions\n            </Typography>\n            <TableContainer className=\"w-full\" component={Card}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    <TableCell>Sr. No.</TableCell>\n                    <TableCell>Full Name</TableCell>\n                    <TableCell align=\"center\">Email</TableCell>\n                    <TableCell align=\"center\">Test</TableCell>\n                    <TableCell align=\"center\">Total Correct</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {submissions.map((submission, index) => (\n                    <TableRow key={submission._id}>\n                      <TableCell>{index + 1}</TableCell>\n                      <TableCell>{submission.submittedBy.fullName}</TableCell>\n                      <TableCell align=\"center\">{submission.submittedBy.email}</TableCell>\n                      <TableCell align=\"center\">{submission.test.title}</TableCell>\n                      <TableCell align=\"center\">{submission.totalCorrect}</TableCell>\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </TableContainer>\n          </div>\n        }\n      />\n    </Routes>\n  );\n}\n","/* eslint-disable no-underscore-dangle */\nimport React from 'react';\n\nimport { Routes, Route, useNavigate } from 'react-router-dom';\n\nimport {\n  Card,\n  Button,\n  IconButton,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  Typography,\n  CircularProgress,\n} from '@mui/material';\n\nimport { Edit, Delete, Add } from '@mui/icons-material';\n\nimport date from 'date-and-time';\n\nimport { useQuery, useMutation } from 'react-query';\n\nimport { useDispatch } from 'react-redux';\nimport { getTests, deleteTest } from '../../api/admin';\nimport { addErrorToast, addSuccessToast } from '../../redux/actions/toasts';\n\nimport NewTest from '../teacher/newTest';\nimport UpdateTest from '../teacher/updateTest';\nimport Submissions from './Submissions';\n\nexport default function Tests() {\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const [tests, setTests] = React.useState([]);\n  const { isLoading, refetch } = useQuery('tests', getTests, {\n    onSuccess: ({ data }) => setTests(data.tests),\n    onError: (err) =>\n      dispatch(addErrorToast({ message: err.response?.data?.error || err.message })),\n  });\n  const deleteMutation = useMutation((_id) => deleteTest(_id), {\n    onSuccess: ({ data }) => {\n      dispatch(addSuccessToast({ message: `${data.test.title} deleted successfully` }));\n      refetch();\n    },\n    onError: (err) =>\n      dispatch(addErrorToast({ message: err.response?.data?.error || err.message })),\n  });\n  function handleDeleteTest(_id) {\n    const test = tests.find((t) => t._id === _id);\n    const now = new Date();\n    const startsAt = new Date(test.startsAt);\n    const submittableBefore = new Date(test.submittableBefore);\n    if (\n      date.subtract(submittableBefore, now).toSeconds() > 0 &&\n      date.subtract(now, startsAt).toSeconds() > 0\n    ) {\n      dispatch(addErrorToast({ message: 'Can not delete test while it is active' }));\n    } else {\n      deleteMutation.mutate(_id);\n    }\n  }\n  if (isLoading)\n    return (\n      <div className=\"relative inset-0 flex items-center justify-center w-full h-full\">\n        <CircularProgress />\n      </div>\n    );\n  return (\n    <Routes>\n      <Route\n        index\n        element={\n          <div className=\"flex flex-col w-full h-full gap-6\">\n            <div className=\"flex justify-end w-full\">\n              <Button variant=\"contained\" startIcon={<Add />} onClick={() => navigate('new-test')}>\n                New Test\n              </Button>\n            </div>\n            <Typography variant=\"h6\" align=\"center\">\n              Tests\n            </Typography>\n            <TableContainer className=\"w-full\" component={Card}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    <TableCell>Sr. No.</TableCell>\n                    <TableCell>Test Title</TableCell>\n                    <TableCell align=\"center\">Subject</TableCell>\n                    <TableCell align=\"center\">Starts At</TableCell>\n                    <TableCell align=\"center\">Submittable Before</TableCell>\n                    <TableCell align=\"center\">Action</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {tests.map((test, index) => (\n                    <TableRow key={test._id}>\n                      <TableCell>{index}</TableCell>\n                      <TableCell>{test.title}</TableCell>\n                      <TableCell align=\"center\">{test.subject}</TableCell>\n                      <TableCell align=\"center\" style={{ minWidth: '100px' }}>\n                        {date.format(new Date(test.startsAt), 'DD-MMM-YYYY hh:mm A')}\n                      </TableCell>\n                      <TableCell align=\"center\" style={{ minWidth: '100px' }}>\n                        {date.format(new Date(test.submittableBefore), 'DD-MMM-YYYY hh:mm A')}\n                      </TableCell>\n                      <TableCell align=\"center\">\n                        <IconButton onClick={() => navigate(`update/${test._id}`)}>\n                          <Edit />\n                        </IconButton>\n                        <IconButton onClick={() => handleDeleteTest(test._id)}>\n                          <Delete />\n                        </IconButton>\n                        <IconButton onClick={() => navigate(`submissions/${test._id}`)}>\n                          Result\n                        </IconButton>\n                      </TableCell>\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </TableContainer>\n          </div>\n        }\n      />\n      <Route path=\"/new-test\" setTests={setTests} element={<NewTest />} />\n      <Route path=\"/update/:_id\" setTests={setTests} element={<UpdateTest />} />\n      <Route path=\"/:id\" element={<h1>View Test</h1>} />\n      <Route path=\"/submissions/:testId/*\" element={<Submissions />} />\n    </Routes>\n  );\n}\n","import React from 'react';\n\nimport {\n  Card,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  Typography,\n} from '@mui/material';\n\nexport default function ViewStudent() {\n  return (\n    <div className=\"flex flex-col w-full h-full gap-6\">\n      <Typography variant=\"h6\" align=\"center\">Student Name</Typography>\n      <TableContainer className=\"w-full\" component={Card}>\n        <Table>\n          <TableHead>\n            <TableRow>\n              <TableCell>Sr. No.</TableCell>\n              <TableCell>Test Title</TableCell>\n              <TableCell align=\"center\">Subject</TableCell>\n              <TableCell align=\"center\">Date Conducted</TableCell>\n              <TableCell align=\"center\">Obtained Marks</TableCell>\n              <TableCell align=\"center\">Total Marks</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {\n              [].map((submission, index) => (\n                <TableRow key={submission.id}>\n                  <TableCell>{index}</TableCell>\n                  <TableCell>{submission.test.title}</TableCell>\n                  <TableCell align=\"center\">{submission.test.subject}</TableCell>\n                  <TableCell align=\"center\">{submission.test.startedAt}</TableCell>\n                  <TableCell align=\"center\">{submission.test.totalMarks}</TableCell>\n                  <TableCell align=\"center\">{submission.student.obtainedMarks}</TableCell>\n                </TableRow>\n              ))\n            }\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </div>\n  );\n}\n","/* eslint-disable no-underscore-dangle */\n/* eslint-disable no-continue */\n/* eslint-disable no-restricted-syntax */\nimport axios from 'axios';\n\nconst students = axios.create({\n  baseURL: `${process.env.REACT_APP_BACKEND_URL}/admin/students`,\n});\n\n// Adding interceptor so that on every request, authorization header should be available\nstudents.interceptors.request.use((config) => {\n  const updated = {\n    ...config,\n    headers: {\n      ...config.headers,\n      common: {\n        ...config.headers.common,\n        authorization: `Bearer ${localStorage.getItem('hts-token')}`,\n      },\n    },\n  };\n  return updated;\n});\n\nexport function getStudents(page) {\n  return students.get(`?page=${page}`);\n}","import React from 'react';\n\nimport {\n  Routes,\n  Route,\n  useNavigate,\n} from 'react-router-dom';\n\nimport {\n  Card,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  Typography,\n  IconButton,\n  CircularProgress,\n  Pagination,\n} from '@mui/material';\nimport { Delete, Visibility } from '@mui/icons-material';\n\nimport ViewStudent from './ViewStudent';\nimport { useQuery } from 'react-query';\nimport { getStudents } from '../../api/admin/students';\nimport { useDispatch } from 'react-redux';\n\nimport { addErrorToast } from '../../redux/actions/toasts';\n\nexport default function Students() {\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const [page, setPage] = React.useState(1);\n  const [students, setStudents] = React.useState([]);\n  const { isLoading } = useQuery(['admin-students', page], () => getStudents(page), {\n    onSuccess: ({ data }) => setStudents(data.students),\n    onError: (err) => dispatch(\n      addErrorToast({ message: err.response?.data?.error || err.message }),\n    ),\n  });\n  function handleDeleteStudent() {}\n  if (isLoading) return <div className=\"relative inset-0 flex items-center justify-center w-full h-full\"><CircularProgress /></div>;\n  return (\n    <Routes>\n      <Route\n        index\n        element={(\n          <div className=\"flex flex-col w-full h-full gap-6\">\n            <Typography variant=\"h6\" align=\"center\">Students</Typography>\n            <TableContainer className=\"w-full\" component={Card}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    <TableCell>Sr. No.</TableCell>\n                    <TableCell>Full Name</TableCell>\n                    <TableCell align=\"center\">Email</TableCell>\n                    <TableCell align=\"center\">CNIC</TableCell>\n                    <TableCell align=\"center\">Action</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {\n                    students.map((student, index) => (\n                      <TableRow key={student._id} onClick={() => navigate(`${student._id}`)}>\n                        <TableCell>{index + 1}</TableCell>\n                        <TableCell>{student.fullName}</TableCell>\n                        <TableCell align=\"center\">{student.email}</TableCell>\n                        <TableCell align=\"center\">{student.cnic}</TableCell>\n                        <TableCell align=\"center\">\n                          <IconButton onClick={() => navigate(`update/${test._id}`)}>\n                            <Visibility />\n                          </IconButton>\n                          <IconButton onClick={() => handleDeleteStudent(test._id)}>\n                            <Delete />\n                          </IconButton>\n                        </TableCell>\n                      </TableRow>\n                    ))\n                  }\n                </TableBody>\n              </Table>\n            </TableContainer>\n            <Pagination className='mx-auto' count={10} page={page} onChange={(e, p) => setPage(p)}  />\n          </div>\n        )}\n      />\n      <Route path=\"/:_id\" element={<ViewStudent />} />\n    </Routes>\n  );\n}\n","import React from 'react';\n\nimport {\n  Typography,\n  Grid,\n  TextField,\n  Button,\n  Select,\n  MenuItem,\n} from '@mui/material';\n\nimport {\n  Add,\n} from '@mui/icons-material';\n\nimport { useFormik } from 'formik';\nimport * as yup from 'yup';\n\nexport default function NewTeacher() {\n  // Form requirements\n  const schema = yup.object({\n    fullName: yup.string().required('Full Name is required').min(2, 'Full Name should be at least 2 characters long'),\n    email: yup.string().required('Email is required').email('Enter a valid email'),\n    password: yup.string().required('Password is required').min(8, 'Password should be at least 8 characters long'),\n    subjects: yup.array().min(1, 'At least one subject is required'),\n    cnic: yup.number().required('CNIC is required').min(1000000000000, 'Enter a valid CNIC').max(9999999999999, 'Enter a valid CNIC'),\n  });\n  const formik = useFormik({\n    initialValues: {\n      fullName: '',\n      email: '',\n      password: '',\n      cnic: 0,\n      subjects: [],\n    },\n    validationSchema: schema,\n    onSubmit: (values) => console.log(values),\n  });\n  // -----------------\n  return (\n    <div className=\"flex flex-col w-full h-full gap-6\">\n      <Typography variant=\"h6\" align=\"center\">New Teacher</Typography>\n      <Grid container direction=\"column\" rowSpacing={3} maxWidth=\"md\">\n        <Grid item container component=\"form\" onSubmit={formik.handleSubmit} xs={12} lg={8} alignItems=\"center\" rowSpacing={1}>\n          <Grid item xs={4} md={4} lg={3}><Typography variant=\"body1\">Full Name</Typography></Grid>\n          <Grid item xs={8} md={8} lg={9}>\n            <TextField\n              fullWidth\n              size=\"small\"\n              name=\"fullName\"\n              value={formik.values.fullName}\n              onChange={formik.handleChange}\n              error={formik.touched.fullName && Boolean(formik.errors.fullName)}\n              helperText={formik.touched.fullName && formik.errors.fullName}\n            />\n          </Grid>\n          <Grid item xs={4} md={4} lg={3}><Typography variant=\"body1\">Email</Typography></Grid>\n          <Grid item xs={8} md={8} lg={9}>\n            <TextField\n              fullWidth\n              size=\"small\"\n              name=\"email\"\n              value={formik.values.email}\n              onChange={formik.handleChange}\n              error={formik.touched.email && Boolean(formik.errors.email)}\n              helperText={formik.touched.email && formik.errors.email}\n            />\n          </Grid>\n          <Grid item xs={4} md={4} lg={3}><Typography variant=\"body1\">Password</Typography></Grid>\n          <Grid item xs={8} md={8} lg={9}>\n            <TextField\n              fullWidth\n              size=\"small\"\n              name=\"password\"\n              value={formik.values.password}\n              onChange={formik.handleChange}\n              error={formik.touched.password && Boolean(formik.errors.password)}\n              helperText={formik.touched.password && formik.errors.password}\n            />\n          </Grid>\n          <Grid item xs={4} md={4} lg={3}><Typography variant=\"body1\">CNIC</Typography></Grid>\n          <Grid item xs={8} md={8} lg={9}>\n            <TextField\n              fullWidth\n              type=\"number\"\n              size=\"small\"\n              name=\"cnic\"\n              value={formik.values.cnic}\n              onChange={formik.handleChange}\n              error={formik.touched.cnic && Boolean(formik.errors.cnic)}\n              helperText={formik.touched.cnic && formik.errors.cnic}\n            />\n          </Grid>\n          <Grid item xs={4} md={4} lg={3}><Typography variant=\"body1\">Subjects</Typography></Grid>\n          <Grid item xs={8} md={8} lg={9}>\n            <Select\n              variant=\"outlined\"\n              fullWidth\n              size=\"small\"\n              multiple\n              name=\"subjects\"\n              onChange={formik.handleChange}\n              value={formik.values.subjects}\n              error={formik.touched.subjects && Boolean(formik.errors.subjects)}\n            >\n              <MenuItem value=\"English\">English</MenuItem>\n              <MenuItem value=\"Math\">Math</MenuItem>\n              <MenuItem value=\"Physics\">Physics</MenuItem>\n              <MenuItem value=\"Chemistry\">Chemistry</MenuItem>\n              <MenuItem value=\"Biology\">Biology</MenuItem>\n            </Select>\n            { formik.touched && formik.errors.subjects && (\n              <Typography className=\"pl-3 my-1 text-xs text-red-500\">\n                {formik.touched && formik.errors.subjects}\n              </Typography>\n            )}\n          </Grid>\n          <Grid item xs={12} className=\"flex items-center justify-center\">\n            <Button type=\"submit\" variant=\"contained\" startIcon={<Add />}>Add</Button>\n          </Grid>\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\n","import React from 'react';\n\nimport {\n  Routes,\n  Route,\n  useNavigate,\n} from 'react-router-dom';\n\nimport {\n  Card,\n  Button,\n  IconButton,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  Typography,\n} from '@mui/material';\n\nimport {\n  Edit,\n  Delete,\n  Add,\n} from '@mui/icons-material';\nimport NewTeacher from './NewTeacher';\n\nexport default function Teachers() {\n  const navigate = useNavigate();\n  return (\n    <Routes>\n      <Route\n        index\n        element={(\n          <div className=\"flex flex-col w-full h-full gap-6\">\n            <div className=\"flex justify-end w-full\">\n              <Button variant=\"contained\" startIcon={<Add />} onClick={() => navigate('new-teacher')}>New Teacher</Button>\n            </div>\n            <Typography variant=\"h6\" align=\"center\">Teachers</Typography>\n            <TableContainer className=\"w-full\" component={Card}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    <TableCell>Sr. No.</TableCell>\n                    <TableCell>Full Name</TableCell>\n                    <TableCell align=\"center\">Email</TableCell>\n                    <TableCell align=\"center\">Subjects</TableCell>\n                    <TableCell align=\"center\">Action</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {\n                    [].map((teacher, index) => (\n                      <TableRow key={teacher.id}>\n                        <TableCell>{index}</TableCell>\n                        <TableCell>{teacher.fullName}</TableCell>\n                        <TableCell>{teacher.subjects.join(',')}</TableCell>\n                        <TableCell align=\"center\">{teacher.subject}</TableCell>\n                        <TableCell align=\"center\">\n                          <IconButton onClick={() => navigate(`update/${teacher.id}`)}>\n                            <Edit />\n                          </IconButton>\n                          <IconButton>\n                            <Delete />\n                          </IconButton>\n                        </TableCell>\n                      </TableRow>\n                    ))\n                  }\n                </TableBody>\n              </Table>\n            </TableContainer>\n          </div>\n        )}\n      />\n      <Route path=\"/new-teacher\" element={<NewTeacher />} />\n      <Route path=\"/update/:id\" element={<h1>Update teacher</h1>} />\n      <Route path=\"/:id\" element={<h1>View Teacher</h1>} />\n    </Routes>\n  );\n}\n","import React from 'react';\n\nimport {\n  Typography,\n  Grid,\n  TextField,\n  Button,\n  Select,\n  MenuItem,\n  CircularProgress,\n} from '@mui/material';\n\nimport {\n  Add,\n} from '@mui/icons-material';\n\nimport { useFormik } from 'formik';\nimport * as yup from 'yup';\n\nimport { useMutation, useQueryClient } from 'react-query';\nimport { newAnnouncement } from '../../../api/admin';\n\nimport { useDispatch } from 'react-redux';\nimport { addErrorToast, addSuccessToast } from '../../../redux/actions/toasts';\nimport { useNavigate } from 'react-router-dom';\n\nexport default function NewAnnouncement() {\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const queryClient = useQueryClient();\n  // Form requirements\n  const { isLoading, mutate } = useMutation(\n    (value) => newAnnouncement(value),\n    {\n      onSuccess: ({ data }) => {\n        dispatch(addSuccessToast({ message: `Announcement added successfully` }));\n        queryClient.invalidateQueries('announcements');\n        navigate(-1);\n      },\n      onError: (err) => dispatch(\n        addErrorToast({ message: err.response?.data?.error || err.message }),\n      ),\n    },\n  )\n  const schema = yup.object({\n    title: yup.string().min(2, 'Title should be at least 2 characters long').required('Title is required'),\n    details: yup.string().min(3, 'Details should be at least 3 characters long').required('Details are required'),\n    link: yup.string().matches(/https?:\\/\\/(www\\.)?[-a-zA-Z0-9@:%._\\+~#=]{1,256}\\.[a-zA-Z0-9()]{1,6}\\b([-a-zA-Z0-9()@:%_\\+.~#?&//=]*)/, 'Link should be valid').test('emptyLink', 'Link can be empty', (value) => value !== ''),\n    isImportant: yup.bool('isImportant should be boolean'),\n  });\n  const formik = useFormik({\n    initialValues: {\n      title: '',\n      details: '',\n      link: '',\n      isImportant: false,\n    },\n    validationSchema: schema,\n    onSubmit: (values) => mutate({ ...values, link: values.link || undefined }),\n  });\n  // -----------------\n  return (\n    <div className=\"flex flex-col w-full h-full gap-6\">\n      <Typography variant=\"h6\" align=\"center\">New Announcement</Typography>\n      <Grid container direction=\"column\" rowSpacing={3} maxWidth=\"md\">\n        <Grid item container component=\"form\" onSubmit={formik.handleSubmit} xs={12} lg={8} alignItems=\"center\" rowSpacing={1}>\n          <Grid item xs={4} md={4} lg={3}><Typography variant=\"body1\">Title</Typography></Grid>\n          <Grid item xs={8} md={8} lg={9}>\n            <TextField\n              fullWidth\n              size=\"small\"\n              name=\"title\"\n              value={formik.values.title}\n              onChange={formik.handleChange}\n              error={formik.touched.title && Boolean(formik.errors.title)}\n              helperText={formik.touched.title && formik.errors.title}\n            />\n          </Grid>\n          <Grid item xs={4} md={4} lg={3}><Typography variant=\"body1\">Details</Typography></Grid>\n          <Grid item xs={8} md={8} lg={9}>\n            <TextField\n              fullWidth\n              size=\"small\"\n              multiline\n              minRows={2}\n              name=\"details\"\n              value={formik.values.details}\n              onChange={formik.handleChange}\n              error={formik.touched.details && Boolean(formik.errors.details)}\n              helperText={formik.touched.details && formik.errors.details}\n            />\n          </Grid>\n          <Grid item xs={4} md={4} lg={3}><Typography variant=\"body1\">Link</Typography></Grid>\n          <Grid item xs={8} md={8} lg={9}>\n            <TextField\n              fullWidth\n              size=\"small\"\n              name=\"link\"\n              value={formik.values.link}\n              onChange={formik.handleChange}\n              error={formik.touched.link && Boolean(formik.errors.link)}\n              helperText={formik.touched.link && formik.errors.link}\n            />\n          </Grid>\n          <Grid item xs={4} md={4} lg={3}><Typography variant=\"body1\">Important</Typography></Grid>\n          <Grid item xs={8} md={8} lg={9}>\n            <Select\n              variant=\"outlined\"\n              fullWidth\n              size=\"small\"\n              name=\"isImportant\"\n              onChange={(e) => formik.setFieldValue('isImportant', Boolean(e.target.value))}\n              value={formik.values.isImportant}\n              error={formik.touched.isImportant && Boolean(formik.errors.isImportant)}\n            >\n              <MenuItem value=\"true\">Yes</MenuItem>\n              <MenuItem value=\"false\">No</MenuItem>\n            </Select>\n            { formik.touched && formik.errors.isImportant && (\n              <Typography className=\"pl-3 my-1 text-xs text-red-500\">\n                {formik.touched && formik.errors.isImportant}\n              </Typography>\n            )}\n          </Grid>\n          <Grid item xs={12} className=\"flex items-center justify-center\">\n            <Button type=\"submit\" disabled={isLoading} variant=\"contained\" startIcon={<Add />}>\n              {\n                isLoading\n                  ? <CircularProgress />\n                  : 'Add'\n              }\n            </Button>\n          </Grid>\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\n","/* eslint-disable no-underscore-dangle */\nimport React from 'react';\n\nimport {\n  Routes,\n  Route,\n  useNavigate,\n} from 'react-router-dom';\n\nimport {\n  Card,\n  Button,\n  IconButton,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  Typography,\n  CircularProgress,\n} from '@mui/material';\n\nimport {\n  Delete,\n  Add,\n} from '@mui/icons-material';\n\nimport { useQuery, useMutation, useQueryClient } from 'react-query';\n\nimport { useDispatch } from 'react-redux';\nimport { getAnnouncements, deleteAnnouncement } from '../../../api/admin';\nimport { addErrorToast, addSuccessToast } from '../../../redux/actions/toasts';\nimport NewAnnouncement from './NewAnnouncement';\n\nexport default function Announcements() {\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const queryClient = useQueryClient();\n  const [announcements, setAnnouncements] = React.useState([]);\n  const { isLoading } = useQuery('announcements', getAnnouncements, {\n    onSuccess: ({ data }) => setAnnouncements(data.announcements),\n    onError: (err) => dispatch(\n      addErrorToast({ message: err.response?.data?.error || err.message }),\n    ),\n  });\n  const deleteMutation = useMutation(\n    (_id) => deleteAnnouncement(_id),\n    {\n      onSuccess: ({ data }) => {\n        dispatch(addSuccessToast({ message: `${data.announcement.title} deleted successfully` }));\n        queryClient.invalidateQueries('announcements');\n      },\n      onError: (err) => dispatch(\n        addErrorToast({ message: err.response?.data?.error || err.message }),\n      ),\n    },\n  );\n  function handleDeleteAnnouncement(_id) {\n    deleteMutation.mutate(_id);\n  }\n  if (isLoading) return <div className=\"relative inset-0 flex items-center justify-center w-full h-full\"><CircularProgress /></div>;\n  return (\n    <Routes>\n      <Route\n        index\n        element={(\n          <div className=\"flex flex-col w-full h-full gap-6\">\n            <div className=\"flex justify-end w-full\">\n              <Button variant=\"contained\" startIcon={<Add />} onClick={() => navigate('new-announcement')}>New Announcement</Button>\n            </div>\n            <Typography variant=\"h6\" align=\"center\">Announcements</Typography>\n            <TableContainer className=\"w-full\" component={Card}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    <TableCell>Sr. No.</TableCell>\n                    <TableCell>Title</TableCell>\n                    <TableCell align=\"center\">Important</TableCell>\n                    <TableCell align=\"center\">Action</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {\n                    announcements.map((announcement, index) => (\n                      <TableRow key={announcement._id}>\n                        <TableCell>{index + 1}</TableCell>\n                        <TableCell>{announcement.title}</TableCell>\n                        <TableCell align=\"center\">{announcement.isImportant ? 'Yes' : 'No'}</TableCell>\n                        <TableCell align=\"center\">\n                          <IconButton onClick={() => handleDeleteAnnouncement(announcement._id)}>\n                            <Delete />\n                          </IconButton>\n                        </TableCell>\n                      </TableRow>\n                    ))\n                  }\n                </TableBody>\n              </Table>\n            </TableContainer>\n          </div>\n        )}\n      />\n      <Route path=\"/new-announcement\" element={<NewAnnouncement />} />\n    </Routes>\n  );\n}\n","/* eslint-disable no-underscore-dangle */\nimport React from 'react';\n\nimport {\n  Card,\n  IconButton,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  Typography,\n  CircularProgress,\n  Select,\n  MenuItem,\n} from '@mui/material';\n\nimport {\n  Check,\n  Close,\n} from '@mui/icons-material';\n\nimport { useQuery, useMutation } from 'react-query';\n\nimport { PhotoProvider, PhotoView } from 'react-photo-view';\nimport 'react-photo-view/dist/react-photo-view.css';\n\nimport { useDispatch } from 'react-redux';\nimport { getTestApplications, getTests, updateTestApplications } from '../../api/admin';\nimport { addErrorToast, addSuccessToast } from '../../redux/actions/toasts';\n\nexport default function TestApplications() {\n  const dispatch = useDispatch();\n  const [testApplications, setTestApplications] = React.useState([]);\n  const [tests, setTests] = React.useState([]);\n  const [approved, setApproved] = React.useState(false);\n  const [selectedTest, setSelectedTest] = React.useState({});\n  useQuery('tests', getTests, {\n    onSuccess: ({ data }) => {\n      setTests(data.tests);\n    },\n    onError: (err) => dispatch(\n      addErrorToast({ message: err.response?.data?.error || err.message }),\n    ),\n  });\n  const { isLoading, refetch } = useQuery(['testApplications', selectedTest._id], () => getTestApplications(selectedTest._id), {\n    onSuccess: ({ data }) => {\n      setTestApplications(data.applications);\n    },\n    onError: (err) => dispatch(\n      addErrorToast({ message: err.response?.data?.error || err.message }),\n    ),\n  });\n  const { mutate } = useMutation(\n    (data) => updateTestApplications(data),\n    {\n      onSuccess: () => {\n        dispatch(addSuccessToast({ message: `Application updated successfully` }));\n        refetch(selectedTest._id);\n      },\n      onError: (err) => dispatch(\n        addErrorToast({ message: err.response?.data?.error || err.message }),\n      ),\n    },\n  );\n  if (isLoading) return <div className=\"relative inset-0 flex items-center justify-center w-full h-full\"><CircularProgress /></div>;\n  return (\n    <div className=\"flex flex-col w-full h-full gap-6\">\n      <div className=\"flex justify-end w-full gap-2 items-center\">\n        <Select\n          title=\"Select Test\"\n          className=\"min-w-16\"\n          size=\"small\"\n          value={selectedTest._id || 'select-test'}\n          onChange={(e) => {\n            const foundTest = tests.find((t) => t._id === e.target.value);\n            setSelectedTest(foundTest);\n          }}\n        >\n          {\n            tests?.map((test) => (\n              <MenuItem value={test._id} key={test._id}>{test.title}</MenuItem>\n            ))\n          }\n          <MenuItem value=\"select-test\" disabled>Select Test</MenuItem>\n        </Select>\n        <Select\n          title=\"Select Status\"\n          className=\"min-w-16\"\n          size=\"small\"\n          value={approved}\n          onChange={(e) => setApproved(e.target.value === 'true')}\n        >\n          <MenuItem value=\"true\">Approved</MenuItem>\n          <MenuItem value=\"false\">Rejected</MenuItem>\n        </Select>\n      </div>\n      <Typography variant=\"h6\" align=\"center\">Test Applications</Typography>\n      <TableContainer className=\"w-full\" component={Card}>\n        <Table>\n          <TableHead>\n            <TableRow>\n              <TableCell>Sr. No.</TableCell>\n              <TableCell>Test Title</TableCell>\n              <TableCell align=\"center\">Subject</TableCell>\n              <TableCell align=\"center\">Student</TableCell>\n              <TableCell align=\"center\">Email</TableCell>\n              <TableCell align=\"center\">Image</TableCell>\n              <TableCell align=\"center\">Action</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {\n              testApplications.filter((app) => app.approved === approved).map((application, index) => (\n                <TableRow key={application._id}>\n                  <TableCell>{index}</TableCell>\n                  <TableCell>{application.test.title}</TableCell>\n                  <TableCell align=\"center\">{application.test.subject}</TableCell>\n                  <TableCell align=\"center\" style={{ minWidth: '100px' }}>\n                    {application.student.fullName}\n                  </TableCell>\n                  <TableCell align=\"center\" style={{ minWidth: '100px' }}>\n                    {application.student.email}\n                  </TableCell>\n                  <TableCell align=\"center\">\n                    <PhotoProvider>\n                      <PhotoView src={`${process.env.REACT_APP_BACKEND_URL}/challans/${application.image}`}>\n                        <img src={`${process.env.REACT_APP_BACKEND_URL}/challans/${application.image}`} alt=\"application\" className=\"w-8 h-8\" />\n                      </PhotoView>\n                    </PhotoProvider>\n                  </TableCell>\n                  <TableCell align=\"center\">\n                    <IconButton onClick={() => mutate({ _id: application._id, approved: true })}>\n                      <Check color={application.approved ? 'primary' : 'inherit'} />\n                    </IconButton>\n                    <IconButton onClick={() => mutate({ _id: application._id, approved: false })}>\n                      <Close color={!application.approved ? 'error' : 'inherit'} />\n                    </IconButton>\n                  </TableCell>\n                </TableRow>\n              ))\n            }\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </div>\n  );\n}\n","import { IconButton, Typography } from '@mui/material';\nimport React from 'react';\n\nimport {\n  Routes,\n  Route,\n  Navigate,\n} from 'react-router-dom';\n\nimport {\n  Logout,\n  Menu,\n} from '@mui/icons-material';\n\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport Sidebar from './sidebar';\nimport Tests from './Tests';\nimport Students from './Students';\nimport Teachers from './Teachers';\nimport Announcements from './Announcements';\nimport TestApplications from './TestApplications';\n\nexport default function Admin() {\n  const dispatch = useDispatch();\n  const [openDrawer, setOpenDrawer] = React.useState(false);\n  const { account } = useSelector((s) => s);\n  if (!account.admin) return <Navigate replace to=\"/login/admin\" />;\n  return (\n    <div className=\"flex flex-col md:flex-row\">\n      <Sidebar open={openDrawer} setOpen={setOpenDrawer} />\n      <section className=\"flex-grow md:w-9/12 lg:w-9/12 2xl:w-10/12\">\n        <div className={`flex ${openDrawer ? 'justify-between' : 'justify-end'} w-full py-2 px-4 border-b`} style={{ minHeight: '40px' }}>\n          <IconButton className=\"block md:hidden\" onClick={() => setOpenDrawer(true)}>\n            <Menu />\n          </IconButton>\n          <Typography variant=\"h5\" className=\"flex items-center justify-center flex-grow\">Admin</Typography>\n          <IconButton onClick={() => {dispatch({ type: 'LOGOUT' }); localStorage.removeItem('hts-token')}}>\n            <Logout />\n          </IconButton>\n        </div>\n        <div className=\"block p-3\">\n          <Routes>\n            <Route index element={<Navigate replace to=\"dashboard\" />} />\n            <Route path=\"/dashboard\" element={<h1>Admin dashboard</h1>} />\n            <Route path=\"/announcements/*\" element={<Announcements />} />\n            <Route path=\"/students/*\" element={<Students />} />\n            <Route path=\"/teachers/*\" element={<Teachers />} />\n            <Route path=\"/profile\" element={<h1>Admin profile</h1>} />\n            <Route path=\"/tests/*\" element={<Tests />} />\n            <Route path=\"/test-applications/*\" element={<TestApplications />} />\n          </Routes>\n        </div>\n      </section>\n    </div>\n  );\n}\n"],"names":["DrawerContent","handleClose","navigate","useNavigate","location","useLocation","listItems","title","link","icon","Dashboard","Announcement","src","student","alt","className","teacher","Quiz","request","Person","Stack","sx","width","IconButton","onClick","Close","logo","List","py","Divider","orientation","map","item","ListItemButton","pathname","startsWith","ListItemIcon","ListItemText","primary","Sidebar","open","setOpen","Drawer","variant","classes","paper","onClose","defaultProps","admin","axios","baseURL","process","getAnnouncements","get","getTests","interceptors","use","config","headers","common","authorization","localStorage","getItem","NewMCQSDialog","handleSubmit","imgRef","React","schema","yup","statement","required","min","image","test","value","size","A","B","C","D","answer","duration","max","formik","useFormik","initialValues","validationSchema","onSubmit","values","resetForm","type","id","nanoid","Dialog","PaperProps","minWidth","xs","lg","xl","DialogTitle","DialogContent","style","paddingTop","spacing","TextField","onChange","handleChange","name","label","fullWidth","error","touched","errors","helperText","current","files","URL","createObjectURL","accept","ref","target","setFieldValue","Typography","Select","MenuItem","InputProps","endAdornment","Button","color","startIcon","Add","NewBlankDialog","Boolean","NewTrueFalseDialog","UpdateMCQSDialog","question","Edit","UpdateBlankDialog","NewTest","anchorEl","setAnchoEl","dispatch","useDispatch","useMutation","data","fd","FormData","append","subject","startsAt","submittableBefore","isDemo","JSON","stringify","questions","forEach","q","post","newTest","onSuccess","addSuccessToast","message","onError","err","addErrorToast","response","isLoading","mutate","Date","toBeUpdatedQuestion","setToBeUpdatedQuestion","isOpenMCQS","setOpenMCQS","isOpenBlank","setOpenBlank","isOpenTrueFalse","setOpenTrueFalse","isOpenUpdateMCQS","setOpenUpdateMCQS","isOpenUpdateBlank","setOpenUpdateBlank","isOpenUpdateTrueFalse","setOpenUpdateTrueFalse","openDialog","dialog","updateQuestion","foundIndex","findIndex","updatedQuestions","slice","align","disabled","CircularProgress","placeholder","date","length","totalSeconds","minutes","Math","floor","seconds","calculateTotalDuration","e","currentTarget","handleMenuOpen","anchorOrigin","vertical","horizontal","transformOrigin","disableRipple","index","component","Card","removed","filter","deleteQuestion","Delete","dialogType","UpdateTest","_id","useParams","updateMutation","updateTest","useQuery","getTest","setValues","Submissions","testId","submissions","setSubmissions","getSubmissions","element","TableContainer","Table","TableHead","TableRow","TableCell","TableBody","submission","submittedBy","fullName","email","totalCorrect","Tests","tests","setTests","refetch","deleteMutation","delete","deleteTest","find","t","now","toSeconds","handleDeleteTest","path","ViewStudent","startedAt","totalMarks","obtainedMarks","students","getStudents","page","Students","setPage","setStudents","cnic","Visibility","Pagination","count","p","NewTeacher","password","subjects","console","log","Grid","container","direction","rowSpacing","maxWidth","alignItems","md","multiple","Teachers","join","NewAnnouncement","queryClient","useQueryClient","invalidateQueries","details","matches","isImportant","undefined","multiline","minRows","Announcements","announcements","setAnnouncements","deleteAnnouncement","announcement","TestApplications","testApplications","setTestApplications","approved","setApproved","selectedTest","setSelectedTest","applications","put","updateTestApplications","foundTest","app","application","Check","Admin","openDrawer","setOpenDrawer","useSelector","s","account","minHeight","Menu","removeItem","Logout","replace","to"],"sourceRoot":""}