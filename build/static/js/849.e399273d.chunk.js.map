{"version":3,"file":"static/js/849.e399273d.chunk.js","mappings":"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","sources":["api/signup.js","components/signup/StudentSignup.jsx","components/signup/index.jsx"],"sourcesContent":["/* eslint-disable import/prefer-default-export */\nimport axios from 'axios';\n\nconst login = axios.create({\n  baseURL: `${process.env.REACT_APP_BACKEND_URL}/signup`,\n  headers: {\n    'Content-Type': 'application/json',\n  },\n});\n\nexport function signupStudent(data) {\n  return login.post('/student', data);\n}\n","import React from 'react';\n\nimport { Stack, Card, Button, Typography, TextField, CircularProgress } from '@mui/material';\n\nimport { Link, useNavigate } from 'react-router-dom';\n\nimport { useDispatch } from 'react-redux';\n\nimport { useFormik } from 'formik';\nimport * as yup from 'yup';\n\nimport { useMutation } from 'react-query';\nimport { addSuccessToast, addErrorToast } from '../../redux/actions/toasts';\nimport { signupStudent } from '../../api/signup';\n\nimport logo from '../../assets/logo.png';\n\nexport default function StudentSignup() {\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const { isLoading, mutate } = useMutation((data) => signupStudent(data), {\n    onSuccess: () => {\n      dispatch(addSuccessToast({ message: 'Student registered successfully' }));\n      navigate('/login');\n    },\n    onError: (err) =>\n      dispatch(addErrorToast({ message: err.response?.data?.error || err.message })),\n  });\n  // Form requirements\n  const schema = yup.object({\n    fullName: yup\n      .string()\n      .required('Full Name is required')\n      .min(2, 'Full Name should be at least 2 characters long'),\n    email: yup.string().required('Email is required').email('Enter a valid email'),\n    password: yup\n      .string()\n      .required('Password is required')\n      .min(8, 'Password should be at least 8 characters long'),\n    cnic: yup\n      .number()\n      .required('CNIC is required')\n      .min(1000000000000, 'Enter a valid CNIC')\n      .max(9999999999999, 'Enter a valid CNIC'),\n  });\n  const formik = useFormik({\n    initialValues: {\n      fullName: '',\n      email: '',\n      password: '',\n      cnic: 0,\n    },\n    validationSchema: schema,\n    onSubmit: (values) => mutate(values),\n  });\n  // -----------------\n  return (\n    <Card elevation={3} className=\"w-full pb-6 my-6\">\n      <Stack spacing={2}>\n        {/* <div className=\"flex\">\n          <Button variant=\"contained\" className=\"flex-grow\">Teacher</Button>\n          <Button variant=\"outlined\" className=\"flex-grow\">Student</Button>\n        </div> */}\n        <Typography variant=\"h5\" align=\"center\">\n          Welcome to\n        </Typography>\n        <img className=\"self-center w-32\" alt=\"hts logo\" src={logo} />\n        <Typography variant=\"h5\" align=\"center\">\n          Sign up as a Student\n        </Typography>\n        <Stack spacing={2} className=\"px-6\" component=\"form\" onSubmit={formik.handleSubmit}>\n          <TextField\n            variant=\"outlined\"\n            fullWidth\n            label=\"Full Name\"\n            name=\"fullName\"\n            value={formik.values.fullName}\n            onChange={formik.handleChange}\n            error={formik.touched.fullName && formik.errors.fullName}\n            helperText={formik.touched.fullName && formik.errors.fullName}\n          />\n          <TextField\n            variant=\"outlined\"\n            fullWidth\n            label=\"Email\"\n            name=\"email\"\n            value={formik.values.email}\n            onChange={formik.handleChange}\n            error={formik.touched.email && formik.errors.email}\n            helperText={formik.touched.email && formik.errors.email}\n          />\n          <TextField\n            variant=\"outlined\"\n            fullWidth\n            type=\"password\"\n            label=\"Password\"\n            name=\"password\"\n            value={formik.values.password}\n            onChange={formik.handleChange}\n            error={formik.touched.password && formik.errors.password}\n            helperText={formik.touched.password && formik.errors.password}\n          />\n          <TextField\n            variant=\"outlined\"\n            fullWidth\n            type=\"number\"\n            label=\"CNIC\"\n            name=\"cnic\"\n            value={formik.values.cnic}\n            onChange={formik.handleChange}\n            error={formik.touched.cnic && formik.errors.cnic}\n            helperText={formik.touched.cnic && formik.errors.cnic}\n          />\n          <Button type=\"submit\" disabled={isLoading} variant=\"contained\">\n            {isLoading ? <CircularProgress /> : 'Signup as a Student'}\n          </Button>\n          <Link to=\"/login/student\">\n            <Typography variant=\"h6\" align=\"center\" color=\"primary\">\n              Already registered? Login\n            </Typography>\n          </Link>\n        </Stack>\n      </Stack>\n    </Card>\n  );\n}\n","import React from 'react';\n\nimport {\n  Routes,\n  Route,\n  Navigate,\n} from 'react-router-dom';\n\nimport {\n  Grid,\n} from '@mui/material';\n\nimport StudentSignup from './StudentSignup';\n\nexport default function SignUp() {\n  return (\n    <Grid container flexDirection=\"column\" justifyContent=\"center\" alignItems=\"center\" className=\"min-h-full p-6\">\n      <Grid container item maxWidth=\"sm\">\n        <Routes>\n          <Route index element={<Navigate replace to=\"/signup/student\" />} />\n          <Route path=\"/student\" element={<StudentSignup />} />\n          <Route path=\"/*\" element={<Navigate replace to=\"/not-found\" />} />\n        </Routes>\n      </Grid>\n    </Grid>\n  );\n}\n"],"names":["login","axios","baseURL","process","headers","StudentSignup","dispatch","useDispatch","navigate","useNavigate","useMutation","data","post","signupStudent","onSuccess","addSuccessToast","message","onError","err","addErrorToast","response","error","isLoading","mutate","schema","yup","fullName","required","min","email","password","cnic","max","formik","useFormik","initialValues","validationSchema","onSubmit","values","Card","elevation","className","Stack","spacing","Typography","variant","align","alt","src","logo","component","handleSubmit","TextField","fullWidth","label","name","value","onChange","handleChange","touched","errors","helperText","type","Button","disabled","CircularProgress","to","color","SignUp","Grid","container","flexDirection","justifyContent","alignItems","item","maxWidth","index","element","replace","path"],"sourceRoot":""}